{"ast":null,"code":"import { socket, UserClient } from \"../importAll\";\nexport function Start_With_Token(store, waiting) {\n  let token = sessionStorage.getItem(\"token\");\n  if (token) socket.emit(\"Start: With-Token\", token);else if (waiting) waiting(true);\n  socket.on(\"Token-Valid\", user => {\n    store.dispatch(store.actions.setIsLogin(true));\n    store.dispatch(store.actions.setUser(user));\n    store.dispatch(store.actions.setSubPage(\"Game-SelectAvatar\"));\n    if (waiting) waiting(true);\n  });\n  socket.on(\"Token-No-Valid\", () => {\n    if (waiting) waiting(true);\n  });\n}\n_c = Start_With_Token;\nexport function Force_Logout(store) {\n  socket.on(\"ForceLogout\", msg => {\n    UserClient.KillToken();\n    store.dispatch(store.actions.setIsLogin(false));\n    store.dispatch(store.actions.setUser({}));\n    store.dispatch(store.actions.setMainPage(\"Guest\"));\n    alert(msg);\n  });\n}\n_c2 = Force_Logout;\nexport function Login_Me(store, send, setMsg) {\n  socket.emit('Login: Me', send);\n  socket.on(\"Login-You-Are-Already\", msgs => setMsg(msgs));\n  socket.on(\"Login-No-Valid\", msgs => setMsg(msgs));\n  socket.on(\"Login-You\", user => {\n    UserClient.CreateToken(user.token);\n    store.dispatch(store.actions.setIsLogin(true));\n    store.dispatch(store.actions.setUser(user));\n    store.dispatch(store.actions.setMainPage(\"Game\"));\n  });\n}\n_c3 = Login_Me;\nexport function Register_Me(store, send, setMsg) {\n  socket.emit(\"Register: Me\", send);\n  socket.on(\"Register-Not-Valid\", msgs => setMsg(msgs));\n  socket.on(\"Register-You\", msgs => setMsg(msgs));\n}\n_c4 = Register_Me;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Start_With_Token\");\n$RefreshReg$(_c2, \"Force_Logout\");\n$RefreshReg$(_c3, \"Login_Me\");\n$RefreshReg$(_c4, \"Register_Me\");","map":{"version":3,"names":["socket","UserClient","Start_With_Token","store","waiting","token","sessionStorage","getItem","emit","on","user","dispatch","actions","setIsLogin","setUser","setSubPage","_c","Force_Logout","msg","KillToken","setMainPage","alert","_c2","Login_Me","send","setMsg","msgs","CreateToken","_c3","Register_Me","_c4","$RefreshReg$"],"sources":["H:/Project/version3/client/src/Socket/UserSocket.tsx"],"sourcesContent":["import { socket ,UserClient} from \"../importAll\";\r\n\r\nexport function Start_With_Token(store:any,waiting?:any){\r\n    let token = sessionStorage.getItem(\"token\");\r\n    if(token) \r\n        socket.emit<string>(\"Start: With-Token\",token)\r\n    else\r\n        if(waiting)\r\n            waiting(true)\r\n    socket.on<UserClient>(\"Token-Valid\",(user)=>{\r\n        store.dispatch(store.actions.setIsLogin(true));\r\n        store.dispatch(store.actions.setUser(user));\r\n        store.dispatch(store.actions.setSubPage(\"Game-SelectAvatar\"))\r\n        if(waiting)\r\n            waiting(true)\r\n    })\r\n    socket.on(\"Token-No-Valid\",()=>{\r\n        if(waiting)\r\n            waiting(true)\r\n    })\r\n    \r\n}\r\n\r\n\r\nexport function Force_Logout(store:any){\r\n    socket.on(\"ForceLogout\",(msg)=>{\r\n        UserClient.KillToken();\r\n        store.dispatch(store.actions.setIsLogin(false));\r\n        store.dispatch(store.actions.setUser({}));\r\n        store.dispatch(store.actions.setMainPage(\"Guest\"));\r\n        alert(msg);\r\n    })\r\n}\r\n\r\n\r\nexport function Login_Me(store:any , send:ILogin , setMsg:any){\r\n    socket.emit <ILogin>     ('Login: Me'              , send)\r\n    socket.on   <ILoginMsgs> (\"Login-You-Are-Already\"  , (msgs:ILoginMsgs) =>  setMsg(msgs))\r\n    socket.on   <ILoginMsgs> (\"Login-No-Valid\"         , (msgs:ILoginMsgs) =>  setMsg(msgs))\r\n    socket.on   <UserClient> (\"Login-You\"              , (user:UserClient) =>  {\r\n        UserClient.CreateToken(user.token)\r\n        store.dispatch(store.actions.setIsLogin(true))\r\n        store.dispatch(store.actions.setUser(user))\r\n        store.dispatch(store.actions.setMainPage(\"Game\"))\r\n    })\r\n}\r\n\r\nexport function Register_Me(store:any,send:IRegister,setMsg:any){\r\n    socket.emit <IRegister>     (\"Register: Me\"       ,send);\r\n    socket.on   <IRegisterMsgs> (\"Register-Not-Valid\" ,(msgs:IRegisterMsgs)=>setMsg(msgs))\r\n    socket.on   <IRegisterMsgs> (\"Register-You\"       ,(msgs:IRegisterMsgs)=>setMsg(msgs)) \r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}