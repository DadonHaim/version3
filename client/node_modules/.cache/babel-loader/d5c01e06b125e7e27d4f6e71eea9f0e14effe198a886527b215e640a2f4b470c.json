{"ast":null,"code":"import { UserClient } from \"../importAll\";\nconst reducers = {\n  setIsLogin: (state, action) => {\n    state.isLogin = action.payload;\n    if (action.payload == true) state.mainPage = \"Game\";else {\n      state.mainPage = \"Guest\";\n      state.subPage = \"Guest-Home\";\n      UserClient.KillToken();\n    }\n  },\n  setUser: (state, action) => {\n    state.user = action.payload;\n  },\n  setMainPage: (state, action) => {\n    state.mainPage = action.payload;\n    if (action.payload == \"Game\") state.subPage = \"Game-SelectAvatar\";\n    if (action.payload == \"Guest\") state.subPage = \"Guest-Home\";\n  },\n  setSubPage: (state, action) => {\n    state.subPage = action.payload;\n  },\n  setActiveAvatar: (state, action) => {\n    state.activeAvatar = action.payload;\n  },\n  setAllAvatars: (state, action) => {\n    state.allAvatars = action.payload;\n  },\n  setAvatarName: (state, action) => {\n    state.activeAvatar.name = action.payload;\n  },\n  setAvatarExp: (state, action) => {\n    state.activeAvatar.exp = action.payload;\n  },\n  setAvatarHp: (state, action) => {\n    state.activeAvatar.hp = action.payload;\n  },\n  setAvatarDamage: (state, action) => {\n    state.activeAvatar.damage = action.payload;\n  },\n  setAvatarEnergy: (state, action) => {\n    state.activeAvatar.energy = action.payload;\n  },\n  setAvatarRefillEnergy: (state, action) => {\n    state.activeAvatar.refillEnergy = action.payload;\n  },\n  setAvatarSilver: (state, action) => {\n    state.activeAvatar.silver = action.payload;\n  },\n  setAvatarGold: (state, action) => {\n    state.activeAvatar.gold = action.payload;\n  },\n  setAvatarRedPowder: (state, action) => {\n    state.activeAvatar.redPowder = action.payload;\n  },\n  setAvatarDiamond: (state, action) => {\n    state.activeAvatar.diamond = action.payload;\n  },\n  setMusic: (state, action) => {\n    state.music = action.payload;\n  },\n  setSound: (state, action) => {\n    state.sound = action.payload;\n  },\n  setAllSettings: (state, action) => {\n    for (let key in action.payload) state.settings[key] = action.payload[key];\n  }\n};\nexport default reducers;","map":{"version":3,"names":["UserClient","reducers","setIsLogin","state","action","isLogin","payload","mainPage","subPage","KillToken","setUser","user","setMainPage","setSubPage","setActiveAvatar","activeAvatar","setAllAvatars","allAvatars","setAvatarName","name","setAvatarExp","exp","setAvatarHp","hp","setAvatarDamage","damage","setAvatarEnergy","energy","setAvatarRefillEnergy","refillEnergy","setAvatarSilver","silver","setAvatarGold","gold","setAvatarRedPowder","redPowder","setAvatarDiamond","diamond","setMusic","music","setSound","sound","setAllSettings","key","settings"],"sources":["H:/Project/version3/client/src/Store/redusers.ts"],"sourcesContent":["import { AvatarClient, UserClient } from \"../importAll\";\r\n\r\nconst reducers = {\r\n    setIsLogin : (state:IStore , action:IAction<boolean>)=>{\r\n        state.isLogin   = action.payload;\r\n        if(action.payload == true)\r\n            state.mainPage  = \"Game\";\r\n        else{\r\n            state.mainPage  = \"Guest\";\r\n            state.subPage   = \"Guest-Home\";\r\n            UserClient.KillToken();\r\n        }\r\n    },\r\n    setUser     : (state:IStore , action:IAction<UserClient>)       => {state.user     = action.payload},\r\n    setMainPage : (state:IStore , action:IAction<AllMainPagesType>) => {\r\n        state.mainPage = action.payload;\r\n        if(action.payload == \"Game\")\r\n            state.subPage  = \"Game-SelectAvatar\"\r\n        if(action.payload == \"Guest\")\r\n            state.subPage  = \"Guest-Home\"\r\n    },\r\n    setSubPage            : (state:IStore , action:IAction<AllSubPagesType>)=> {state.subPage  = action.payload},\r\n    setActiveAvatar       : (state:IStore , action:IAction<AvatarClient>)   => {state.activeAvatar                = action.payload},\r\n    setAllAvatars         : (state:IStore , action:IAction<AvatarClient[]>) => {state.allAvatars                  = action.payload},\r\n    setAvatarName         : (state:IStore , action:IAction<string>)         => {state.activeAvatar.name           = action.payload},\r\n    setAvatarExp          : (state:IStore , action:IAction<number>)         => {state.activeAvatar.exp            = action.payload},\r\n    setAvatarHp           : (state:IStore , action:IAction<number>)         => {state.activeAvatar.hp             = action.payload},\r\n    setAvatarDamage       : (state:IStore , action:IAction<number>)         => {state.activeAvatar.damage         = action.payload},\r\n    setAvatarEnergy       : (state:IStore , action:IAction<number>)         => {state.activeAvatar.energy         = action.payload},\r\n    setAvatarRefillEnergy : (state:IStore , action:IAction<number>)         => {state.activeAvatar.refillEnergy   = action.payload},\r\n    setAvatarSilver       : (state:IStore , action:IAction<number>)         => {state.activeAvatar.silver         = action.payload},\r\n    setAvatarGold         : (state:IStore , action:IAction<number>)         => {state.activeAvatar.gold           = action.payload},\r\n    setAvatarRedPowder    : (state:IStore , action:IAction<number>)         => {state.activeAvatar.redPowder      = action.payload},\r\n    setAvatarDiamond      : (state:IStore , action:IAction<number>)         => {state.activeAvatar.diamond        = action.payload},\r\n    setMusic              : (state:IStore , action:IAction<boolean>)        => {state.music                       = action.payload},\r\n    setSound              : (state:IStore , action:IAction<boolean>)        => {state.sound                       = action.payload},\r\n\r\n    setAllSettings        : (state:IStore , action:IAction<IClientSettings & IGlobalSettings>)       => { for(let key in action.payload) state.settings[key] = action.payload[key]},\r\n}\r\n\r\nexport default reducers\r\n\r\n"],"mappings":"AAAA,SAAuBA,UAAU,QAAQ,cAAc;AAEvD,MAAMC,QAAQ,GAAG;EACbC,UAAU,EAAGA,CAACC,KAAY,EAAGC,MAAuB,KAAG;IACnDD,KAAK,CAACE,OAAO,GAAKD,MAAM,CAACE,OAAO;IAChC,IAAGF,MAAM,CAACE,OAAO,IAAI,IAAI,EACrBH,KAAK,CAACI,QAAQ,GAAI,MAAM,CAAC,KACzB;MACAJ,KAAK,CAACI,QAAQ,GAAI,OAAO;MACzBJ,KAAK,CAACK,OAAO,GAAK,YAAY;MAC9BR,UAAU,CAACS,SAAS,CAAC,CAAC;IAC1B;EACJ,CAAC;EACDC,OAAO,EAAOA,CAACP,KAAY,EAAGC,MAA0B,KAAW;IAACD,KAAK,CAACQ,IAAI,GAAOP,MAAM,CAACE,OAAO;EAAA,CAAC;EACpGM,WAAW,EAAGA,CAACT,KAAY,EAAGC,MAAgC,KAAK;IAC/DD,KAAK,CAACI,QAAQ,GAAGH,MAAM,CAACE,OAAO;IAC/B,IAAGF,MAAM,CAACE,OAAO,IAAI,MAAM,EACvBH,KAAK,CAACK,OAAO,GAAI,mBAAmB;IACxC,IAAGJ,MAAM,CAACE,OAAO,IAAI,OAAO,EACxBH,KAAK,CAACK,OAAO,GAAI,YAAY;EACrC,CAAC;EACDK,UAAU,EAAcA,CAACV,KAAY,EAAGC,MAA+B,KAAI;IAACD,KAAK,CAACK,OAAO,GAAIJ,MAAM,CAACE,OAAO;EAAA,CAAC;EAC5GQ,eAAe,EAASA,CAACX,KAAY,EAAGC,MAA4B,KAAO;IAACD,KAAK,CAACY,YAAY,GAAkBX,MAAM,CAACE,OAAO;EAAA,CAAC;EAC/HU,aAAa,EAAWA,CAACb,KAAY,EAAGC,MAA8B,KAAK;IAACD,KAAK,CAACc,UAAU,GAAoBb,MAAM,CAACE,OAAO;EAAA,CAAC;EAC/HY,aAAa,EAAWA,CAACf,KAAY,EAAGC,MAAsB,KAAa;IAACD,KAAK,CAACY,YAAY,CAACI,IAAI,GAAaf,MAAM,CAACE,OAAO;EAAA,CAAC;EAC/Hc,YAAY,EAAYA,CAACjB,KAAY,EAAGC,MAAsB,KAAa;IAACD,KAAK,CAACY,YAAY,CAACM,GAAG,GAAcjB,MAAM,CAACE,OAAO;EAAA,CAAC;EAC/HgB,WAAW,EAAaA,CAACnB,KAAY,EAAGC,MAAsB,KAAa;IAACD,KAAK,CAACY,YAAY,CAACQ,EAAE,GAAenB,MAAM,CAACE,OAAO;EAAA,CAAC;EAC/HkB,eAAe,EAASA,CAACrB,KAAY,EAAGC,MAAsB,KAAa;IAACD,KAAK,CAACY,YAAY,CAACU,MAAM,GAAWrB,MAAM,CAACE,OAAO;EAAA,CAAC;EAC/HoB,eAAe,EAASA,CAACvB,KAAY,EAAGC,MAAsB,KAAa;IAACD,KAAK,CAACY,YAAY,CAACY,MAAM,GAAWvB,MAAM,CAACE,OAAO;EAAA,CAAC;EAC/HsB,qBAAqB,EAAGA,CAACzB,KAAY,EAAGC,MAAsB,KAAa;IAACD,KAAK,CAACY,YAAY,CAACc,YAAY,GAAKzB,MAAM,CAACE,OAAO;EAAA,CAAC;EAC/HwB,eAAe,EAASA,CAAC3B,KAAY,EAAGC,MAAsB,KAAa;IAACD,KAAK,CAACY,YAAY,CAACgB,MAAM,GAAW3B,MAAM,CAACE,OAAO;EAAA,CAAC;EAC/H0B,aAAa,EAAWA,CAAC7B,KAAY,EAAGC,MAAsB,KAAa;IAACD,KAAK,CAACY,YAAY,CAACkB,IAAI,GAAa7B,MAAM,CAACE,OAAO;EAAA,CAAC;EAC/H4B,kBAAkB,EAAMA,CAAC/B,KAAY,EAAGC,MAAsB,KAAa;IAACD,KAAK,CAACY,YAAY,CAACoB,SAAS,GAAQ/B,MAAM,CAACE,OAAO;EAAA,CAAC;EAC/H8B,gBAAgB,EAAQA,CAACjC,KAAY,EAAGC,MAAsB,KAAa;IAACD,KAAK,CAACY,YAAY,CAACsB,OAAO,GAAUjC,MAAM,CAACE,OAAO;EAAA,CAAC;EAC/HgC,QAAQ,EAAgBA,CAACnC,KAAY,EAAGC,MAAuB,KAAY;IAACD,KAAK,CAACoC,KAAK,GAAyBnC,MAAM,CAACE,OAAO;EAAA,CAAC;EAC/HkC,QAAQ,EAAgBA,CAACrC,KAAY,EAAGC,MAAuB,KAAY;IAACD,KAAK,CAACsC,KAAK,GAAyBrC,MAAM,CAACE,OAAO;EAAA,CAAC;EAE/HoC,cAAc,EAAUA,CAACvC,KAAY,EAAGC,MAAiD,KAAW;IAAE,KAAI,IAAIuC,GAAG,IAAIvC,MAAM,CAACE,OAAO,EAAEH,KAAK,CAACyC,QAAQ,CAACD,GAAG,CAAC,GAAGvC,MAAM,CAACE,OAAO,CAACqC,GAAG,CAAC;EAAA;AAClL,CAAC;AAED,eAAe1C,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}