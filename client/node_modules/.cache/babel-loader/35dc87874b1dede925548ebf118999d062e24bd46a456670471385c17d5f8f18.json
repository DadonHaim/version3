{"ast":null,"code":"var _jsxFileName = \"H:\\\\Project\\\\version3\\\\client\\\\src\\\\Components\\\\Game\\\\Inventory.tsx\",\n  _s = $RefreshSig$();\nimport { Grid, memo, useSelector, Lable, useState, Div, RandomString, React, useStore } from \"../../importAll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inventory = _s(memo(_c = _s(props => {\n  _s();\n  let {\n    dispatch,\n    actions\n  } = useStore();\n  let [category, setCategory] = useState(\"hat\");\n  let avatarGender = useSelector(store => store.createAvatar_gender);\n  let avatarMagic = useSelector(store => store.createAvatar_magic);\n  function setItem(item) {\n    dispatch(actions.set({\n      type: `createAvatar_${category}`,\n      value: item\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    ...props,\n    rows: 5,\n    cols: 4,\n    children: [/*#__PURE__*/_jsxDEV(Lable, {\n      border: true,\n      height: 50,\n      onClick: () => setCategory(\"hat\"),\n      children: \"\\u05DB\\u05D5\\u05D1\\u05E2\\u05D9\\u05DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Lable, {\n      border: true,\n      height: 50,\n      onClick: () => setCategory(\"shirt\"),\n      children: \"\\u05D7\\u05D5\\u05DC\\u05E6\\u05D5\\u05EA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Lable, {\n      border: true,\n      height: 50,\n      onClick: () => setCategory(\"pants\"),\n      children: \"\\u05DE\\u05DB\\u05E0\\u05E1\\u05D9\\u05D9\\u05DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Lable, {\n      border: true,\n      height: 50,\n      onClick: () => setCategory(\"shoes\"),\n      children: \"\\u05E0\\u05E2\\u05DC\\u05D9\\u05D9\\u05DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), props.items.map(item => {\n      if (item.categoryItem == category && (item.gender == avatarGender || item.gender == \"all\") && (item.magic == avatarMagic || item.magic == \"all\")) return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Div, {\n          Flex: true,\n          XYcenter: true,\n          border: true,\n          onClick: () => setItem(item),\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)\n      }, RandomString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 22\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}, \"kniUfwf68iW94xfldUsOn4HZJVI=\", false, function () {\n  return [useStore, useSelector, useSelector];\n})), \"kniUfwf68iW94xfldUsOn4HZJVI=\", false, function () {\n  return [useStore, useSelector, useSelector];\n});\n_c2 = Inventory;\nexport default Inventory;\nfunction Abc(str) {\n  return str[0].toUpperCase() + str.substring(1);\n}\n_c3 = Abc;\nfunction abc(str) {\n  return str[0].toLowerCase() + str.substring(1);\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Inventory$memo\");\n$RefreshReg$(_c2, \"Inventory\");\n$RefreshReg$(_c3, \"Abc\");","map":{"version":3,"names":["Grid","memo","useSelector","Lable","useState","Div","RandomString","React","useStore","jsxDEV","_jsxDEV","Inventory","_s","_c","props","dispatch","actions","category","setCategory","avatarGender","store","createAvatar_gender","avatarMagic","createAvatar_magic","setItem","item","set","type","value","rows","cols","children","border","height","onClick","fileName","_jsxFileName","lineNumber","columnNumber","items","map","categoryItem","gender","magic","Fragment","Flex","XYcenter","name","_c2","Abc","str","toUpperCase","substring","_c3","abc","toLowerCase","$RefreshReg$"],"sources":["H:/Project/version3/client/src/Components/Game/Inventory.tsx"],"sourcesContent":["import {Avatar,Grid,Name, memo, useSelector ,Cloth, AvatarClient, Lable, useState, ItemClient, Div, RandomString, React, useStore} from \"../../importAll\";\r\n\r\nconst Inventory = memo((props: IInventoryProps)=>{\r\n    let {dispatch,actions} = useStore()\r\n    let [category , setCategory] = useState<\"hat\"|\"shirt\"|\"shoes\"|\"pants\">(\"hat\")\r\n    let avatarGender = useSelector<IStore,IGender>(store=>store.createAvatar_gender) \r\n    let avatarMagic = useSelector<IStore,IGender>(store=>store.createAvatar_magic) \r\n\r\n    function setItem(item:ItemClient){\r\n       dispatch(actions.set({\r\n            type:`createAvatar_${category}` as allStoreType ,\r\n            value:item\r\n        }))\r\n    }\r\n\r\n    return(\r\n        <Grid {...props} rows={5} cols={4}> \r\n            <Lable  border height={50} onClick={()=>setCategory(\"hat\")}>כובעים</Lable>\r\n            <Lable  border height={50} onClick={()=>setCategory(\"shirt\")}>חולצות</Lable>\r\n            <Lable  border height={50} onClick={()=>setCategory(\"pants\")}>מכנסיים</Lable>\r\n            <Lable  border height={50} onClick={()=>setCategory(\"shoes\")}>נעליים</Lable>\r\n\r\n            {\r\n                props.items.map(item=>{\r\n                    if(item.categoryItem == category && (item.gender == avatarGender || item.gender == \"all\") && (item.magic==avatarMagic || item.magic ==\"all\"))\r\n                    return (\r\n                     <React.Fragment key={RandomString()}>\r\n                        <Div Flex XYcenter border onClick={()=>setItem(item)}>\r\n                            {item.name}\r\n                        </Div>\r\n                     </React.Fragment>\r\n                    )\r\n\r\n                })\r\n            }\r\n        </Grid>\r\n    )\r\n\r\n})\r\n\r\ninterface IInventoryProps extends IGlobalProps{\r\n    items: ItemClient[];\r\n}\r\nexport default Inventory;\r\n\r\nfunction Abc(str:string):string{\r\n    return str[0].toUpperCase()+str.substring(1);\r\n}\r\n\r\nfunction abc(str:string):string{\r\n    return str[0].toLowerCase()+str.substring(1);\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}