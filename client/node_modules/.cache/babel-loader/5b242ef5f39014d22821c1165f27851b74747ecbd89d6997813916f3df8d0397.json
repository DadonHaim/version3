{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nexport function useSelector1(arr) {\n  _s();\n  let result = [];\n  let x1 = useSelector(store => store[arr[0]]);\n  let x2 = useSelector(store => store[arr[1]]);\n  result.push(x1);\n  return result;\n}\n_s(useSelector1, \"mSVsWUFJLd7GJzOR13AUOSZ5dAk=\", false, function () {\n  return [useSelector, useSelector];\n});\nexport function useSelector2(arr) {\n  _s2();\n  let result = [];\n  let x1 = useSelector(store => store[arr[0]]);\n  let x2 = useSelector(store => store[arr[1]]);\n  result.push(x1);\n  return result;\n}\n_s2(useSelector2, \"mSVsWUFJLd7GJzOR13AUOSZ5dAk=\", false, function () {\n  return [useSelector, useSelector];\n});\nexport function useSelector3(arr) {\n  _s3();\n  let result = [];\n  let x1 = useSelector(store => store[arr[0]]);\n  let x2 = useSelector(store => store[arr[1]]);\n  result.push(x1);\n  return result;\n}\n_s3(useSelector3, \"mSVsWUFJLd7GJzOR13AUOSZ5dAk=\", false, function () {\n  return [useSelector, useSelector];\n});","map":{"version":3,"names":["useSelector","useSelector1","arr","_s","result","x1","store","x2","push","useSelector2","_s2","useSelector3","_s3"],"sources":["H:/Project/version3/client/src/Hooks/useSelectorV2.tsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\n\r\n\r\nexport function useSelector1(arr:allStoreType[]){\r\n    \r\n\r\n\r\n    let result :any[]= []\r\n\r\n    \r\n    let x1 = useSelector<IStore,any>(store=>store[arr[0]])\r\n    let x2 = useSelector<IStore,any>(store=>store[arr[1]])\r\n    \r\n    result.push(x1)\r\n\r\n\r\n\r\n    return result;\r\n\r\n}\r\nexport  function useSelector2(arr:allStoreType[]){\r\n    \r\n\r\n\r\n    let result :any[]= []\r\n\r\n    \r\n    let x1 = useSelector<IStore,any>(store=>store[arr[0]])\r\n    let x2 = useSelector<IStore,any>(store=>store[arr[1]])\r\n    \r\n    result.push(x1)\r\n\r\n\r\n\r\n    return result;\r\n\r\n}\r\nexport function useSelector3(arr:allStoreType[]){\r\n    \r\n\r\n\r\n    let result :any[]= []\r\n\r\n    \r\n    let x1 = useSelector<IStore,any>(store=>store[arr[0]])\r\n    let x2 = useSelector<IStore,any>(store=>store[arr[1]])\r\n    \r\n    result.push(x1)\r\n\r\n\r\n\r\n    return result;\r\n\r\n}"],"mappings":";;;AAAA,SAASA,WAAW,QAAQ,aAAa;AAGzC,OAAO,SAASC,YAAYA,CAACC,GAAkB,EAAC;EAAAC,EAAA;EAI5C,IAAIC,MAAa,GAAE,EAAE;EAGrB,IAAIC,EAAE,GAAGL,WAAW,CAAaM,KAAK,IAAEA,KAAK,CAACJ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACtD,IAAIK,EAAE,GAAGP,WAAW,CAAaM,KAAK,IAAEA,KAAK,CAACJ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAEtDE,MAAM,CAACI,IAAI,CAACH,EAAE,CAAC;EAIf,OAAOD,MAAM;AAEjB;AAACD,EAAA,CAhBeF,YAAY;EAAA,QAOfD,WAAW,EACXA,WAAW;AAAA;AASxB,OAAQ,SAASS,YAAYA,CAACP,GAAkB,EAAC;EAAAQ,GAAA;EAI7C,IAAIN,MAAa,GAAE,EAAE;EAGrB,IAAIC,EAAE,GAAGL,WAAW,CAAaM,KAAK,IAAEA,KAAK,CAACJ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACtD,IAAIK,EAAE,GAAGP,WAAW,CAAaM,KAAK,IAAEA,KAAK,CAACJ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAEtDE,MAAM,CAACI,IAAI,CAACH,EAAE,CAAC;EAIf,OAAOD,MAAM;AAEjB;AAACM,GAAA,CAhBgBD,YAAY;EAAA,QAOhBT,WAAW,EACXA,WAAW;AAAA;AASxB,OAAO,SAASW,YAAYA,CAACT,GAAkB,EAAC;EAAAU,GAAA;EAI5C,IAAIR,MAAa,GAAE,EAAE;EAGrB,IAAIC,EAAE,GAAGL,WAAW,CAAaM,KAAK,IAAEA,KAAK,CAACJ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACtD,IAAIK,EAAE,GAAGP,WAAW,CAAaM,KAAK,IAAEA,KAAK,CAACJ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAEtDE,MAAM,CAACI,IAAI,CAACH,EAAE,CAAC;EAIf,OAAOD,MAAM;AAEjB;AAACQ,GAAA,CAhBeD,YAAY;EAAA,QAOfX,WAAW,EACXA,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}