{"ast":null,"code":"var _jsxFileName = \"H:\\\\Project\\\\version3\\\\client\\\\src\\\\Components\\\\ComponentLib.tsx\";\nimport { usePermission } from \"../importAll\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Component {\n  constructor(Comp, Loading) {\n    this.Comp = void 0;\n    this.Loading = props => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    this.Comp = Comp;\n    if (Loading) this.Loading = Loading;\n  }\n  Get(permissions = {}) {\n    var _s = $RefreshSig$();\n    let Com = this.Comp;\n    let Loading = this.Loading;\n    return _s(props => {\n      _s();\n      let pre = usePermission(permissions);\n      if (pre) return /*#__PURE__*/_jsxDEV(Com, {\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this);\n      return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }, this);\n    }, \"47qvL+hEHxxy0YR73TnlW+phQas=\", false, function () {\n      return [usePermission];\n    });\n  }\n}","map":{"version":3,"names":["usePermission","Fragment","_Fragment","jsxDEV","_jsxDEV","Component","constructor","Comp","Loading","props","Get","permissions","_s","$RefreshSig$","Com","pre","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["H:/Project/version3/client/src/Components/ComponentLib.tsx"],"sourcesContent":["import {usePermission} from \"../importAll\";\r\ntype ComponentType = (props:any)=>JSX.Element;\r\n\r\nexport default class Component{\r\n    public Comp :ComponentType;\r\n    public Loading :ComponentType = (props)=><></>; \r\n\r\n    constructor(Comp:ComponentType , Loading?:ComponentType){\r\n        this.Comp = Comp;\r\n        if(Loading)\r\n            this.Loading = Loading;\r\n    }\r\n\r\n\r\n\r\n    public Get(permissions:IUsePermission={}){\r\n        let Com = this.Comp\r\n        let Loading = this.Loading\r\n        return (props:any) => {\r\n            let pre = usePermission(permissions)\r\n            if(pre)\r\n                return  <Com {...props}/>\r\n            return <Loading/>\r\n        }\r\n               \r\n    }\r\n}\r\n"],"mappings":";AAAA,SAAQA,aAAa,QAAO,cAAc;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG3C,eAAe,MAAMC,SAAS;EAI1BC,WAAWA,CAACC,IAAkB,EAAGC,OAAsB,EAAC;IAAA,KAHjDD,IAAI;IAAA,KACJC,OAAO,GAAmBC,KAAK,iBAAGL,OAAA,CAAAF,SAAA,mBAAI,CAAC;IAG1C,IAAI,CAACK,IAAI,GAAGA,IAAI;IAChB,IAAGC,OAAO,EACN,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC9B;EAIOE,GAAGA,CAACC,WAA0B,GAAC,CAAC,CAAC,EAAC;IAAA,IAAAC,EAAA,GAAAC,YAAA;IACrC,IAAIC,GAAG,GAAG,IAAI,CAACP,IAAI;IACnB,IAAIC,OAAO,GAAG,IAAI,CAACA,OAAO;IAC1B,OAAAI,EAAA,CAAQH,KAAS,IAAK;MAAAG,EAAA;MAClB,IAAIG,GAAG,GAAGf,aAAa,CAACW,WAAW,CAAC;MACpC,IAAGI,GAAG,EACF,oBAAQX,OAAA,CAACU,GAAG;QAAA,GAAKL;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAC7B,oBAAOf,OAAA,CAACI,OAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IACrB,CAAC;MAAA,QAJanB,aAAa;IAAA;EAM/B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}