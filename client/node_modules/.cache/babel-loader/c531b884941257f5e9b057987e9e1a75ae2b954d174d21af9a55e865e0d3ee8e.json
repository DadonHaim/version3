{"ast":null,"code":"var _jsxFileName = \"H:\\\\Project\\\\version3\\\\client\\\\src\\\\Components\\\\Game\\\\Game.tsx\",\n  _s = $RefreshSig$();\nimport { Avatar_Give_Me_List } from \"../../Socket/AvatarSocket\";\nimport { memo, useSelector, GameCreateAvatar, GameSelectAvatar, useStore, useState, useEffectV2, Container } from \"./../../importAll\";\nimport MusicEffect from \"./comps/MusicEffect\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = _s(memo(_c = _s(() => {\n  _s();\n  let mainPage = useSelector(store => store.mainPage);\n  if (mainPage != \"Game\") return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  let settings = useSelector(store => store.settings);\n  let subPage = useSelector(store => store.subPage);\n  let store = useStore();\n  let [isloading, setIsLoading] = useState(true);\n  useEffectV2(\"Game\", () => Avatar_Give_Me_List(store, setIsLoading));\n  return isloading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Wait\"\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(Container, {\n    grid: settings.CONTAINER_APP_GRID,\n    width: \"110vh\",\n    height: \"90vh\",\n    margin: \"10px auto\",\n    border: true,\n    children: [/*#__PURE__*/_jsxDEV(GameSelectAvatar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameCreateAvatar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MusicEffect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}, \"bunXBzaGlqfKUfud4z+KkNdIeJU=\", false, function () {\n  return [useSelector, useSelector, useSelector, useStore, useEffectV2];\n})), \"bunXBzaGlqfKUfud4z+KkNdIeJU=\", false, function () {\n  return [useSelector, useSelector, useSelector, useStore, useEffectV2];\n});\n_c2 = Game;\nexport default Game;\nvar _c, _c2;\n$RefreshReg$(_c, \"Game$memo\");\n$RefreshReg$(_c2, \"Game\");","map":{"version":3,"names":["Avatar_Give_Me_List","memo","useSelector","GameCreateAvatar","GameSelectAvatar","useStore","useState","useEffectV2","Container","MusicEffect","Fragment","_Fragment","jsxDEV","_jsxDEV","Game","_s","_c","mainPage","store","settings","subPage","isloading","setIsLoading","children","grid","CONTAINER_APP_GRID","width","height","margin","border","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["H:/Project/version3/client/src/Components/Game/Game.tsx"],"sourcesContent":["import { Avatar_Give_Me_List } from \"../../Socket/AvatarSocket\";\r\nimport {memo, useSelector, GameCreateAvatar ,GameSelectAvatar, useStore, useState, useEffectV2, Container, Settings} from \"./../../importAll\";\r\nimport MusicEffect from \"./comps/MusicEffect\";\r\n\r\n\r\nconst Game = memo(()=>{\r\n    let mainPage                    = useSelector<IStore,any>(store=>store.mainPage)\r\n    if(mainPage != \"Game\") \r\n        return <></>\r\n    let settings                    = useSelector<IStore,Settings>(store=>store.settings)\r\n    let subPage :AllGamePageType    = useSelector<IStore,any>(store=>store.subPage)\r\n    let store                       = useStore();\r\n    let [isloading , setIsLoading]  = useState<boolean>(true);\r\n    \r\n\r\n    useEffectV2(\"Game\",()=>Avatar_Give_Me_List(store,setIsLoading)) \r\n    \r\n    \r\n    return isloading? \r\n        <>Wait</>\r\n    : ( \r\n         <Container grid={settings.CONTAINER_APP_GRID} width=\"110vh\" height=\"90vh\" margin=\"10px auto\" border> \r\n            <GameSelectAvatar/>\r\n            <GameCreateAvatar/>\r\n            <MusicEffect/>\r\n        </Container>\r\n    )\r\n});\r\n\r\nexport default Game;"],"mappings":";;AAAA,SAASA,mBAAmB,QAAQ,2BAA2B;AAC/D,SAAQC,IAAI,EAAEC,WAAW,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAiB,mBAAmB;AAC7I,OAAOC,WAAW,MAAM,qBAAqB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,IAAI,GAAAC,EAAA,CAAGd,IAAI,CAAAe,EAAA,GAAAD,EAAA,CAAC,MAAI;EAAAA,EAAA;EAClB,IAAIE,QAAQ,GAAsBf,WAAW,CAAagB,KAAK,IAAEA,KAAK,CAACD,QAAQ,CAAC;EAChF,IAAGA,QAAQ,IAAI,MAAM,EACjB,oBAAOJ,OAAA,CAAAF,SAAA,mBAAI,CAAC;EAChB,IAAIQ,QAAQ,GAAsBjB,WAAW,CAAkBgB,KAAK,IAAEA,KAAK,CAACC,QAAQ,CAAC;EACrF,IAAIC,OAAwB,GAAMlB,WAAW,CAAagB,KAAK,IAAEA,KAAK,CAACE,OAAO,CAAC;EAC/E,IAAIF,KAAK,GAAyBb,QAAQ,CAAC,CAAC;EAC5C,IAAI,CAACgB,SAAS,EAAGC,YAAY,CAAC,GAAIhB,QAAQ,CAAU,IAAI,CAAC;EAGzDC,WAAW,CAAC,MAAM,EAAC,MAAIP,mBAAmB,CAACkB,KAAK,EAACI,YAAY,CAAC,CAAC;EAG/D,OAAOD,SAAS,gBACZR,OAAA,CAAAF,SAAA;IAAAY,QAAA,EAAE;EAAI,gBAAE,CAAC,gBAERV,OAAA,CAACL,SAAS;IAACgB,IAAI,EAAEL,QAAQ,CAACM,kBAAmB;IAACC,KAAK,EAAC,OAAO;IAACC,MAAM,EAAC,MAAM;IAACC,MAAM,EAAC,WAAW;IAACC,MAAM;IAAAN,QAAA,gBAChGV,OAAA,CAACT,gBAAgB;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnBpB,OAAA,CAACV,gBAAgB;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnBpB,OAAA,CAACJ,WAAW;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CACd;AACL,CAAC;EAAA,QArBqC/B,WAAW,EAGXA,WAAW,EACXA,WAAW,EACXG,QAAQ,EAI1CE,WAAW;AAAA,EAYd,CAAC;EAAA,QArBoCL,WAAW,EAGXA,WAAW,EACXA,WAAW,EACXG,QAAQ,EAI1CE,WAAW;AAAA,EAYb;AAAC2B,GAAA,GAtBGpB,IAAI;AAwBV,eAAeA,IAAI;AAAC,IAAAE,EAAA,EAAAkB,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}