{"ast":null,"code":"var _jsxFileName = \"H:\\\\Project\\\\version3\\\\client\\\\src\\\\Components\\\\Containers.tsx\",\n  _s = $RefreshSig$();\nimport { GridBtn } from \"../devComponent\";\nimport { GlobalStyle, memo, React, useStore, RandomString } from \"../importAll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet numberBtnGrid = 0;\nexport const Div = memo(_c = props => !props.Empty ? /*#__PURE__*/_jsxDEV(\"div\", {\n  className: props.className,\n  style: GlobalStyle(props),\n  onClick: props.onClick,\n  children: [\" \", props.children, \" \"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 64\n}, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: props.children\n}, void 0, false));\n_c2 = Div;\nexport const Img = memo(_c3 = props => /*#__PURE__*/_jsxDEV(\"img\", {\n  src: props.bgImg,\n  style: GlobalStyle(props),\n  width: \"100%\",\n  height: \"auto\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 50\n}, this));\n_c4 = Img;\nexport const Grid = memo(_c5 = (props, GD = RandomString(10)) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Div, {\n    className: GD,\n    ...props,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 72\n  }, this), \" \", /*#__PURE__*/_jsxDEV(GridBtn, {\n    ForClassName: GD,\n    top: numberBtnGrid++\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 126\n  }, this), \" \"]\n}, void 0, true));\n\n// export const Container  = memo( (props:IGlobalProps) => <Grid              {...props}> {props.children}                     </Grid> )\n// export const Main       = memo( (props:IGlobalProps) => <Grid              {...props}> {props.children}                     </Grid> )\n// export const Footer     = memo( (props:IGlobalProps) => <Grid              {...props}> {props.children}                     </Grid> )\n// export const Nav        = memo( (props:IGlobalProps) => <Div               {...props}> {props.children}                     </Div>  )\n// export const Header     = memo( (props:IGlobalProps) => <Div               {...props}> {props.children}                     </Div>  )\n// export const Aside      = memo( (props:IGlobalProps) => <Div               {...props}> {props.children}                     </Div>  )\n// export const Box        = memo( (props:IGlobalProps) => <Div               {...props}> {props.children}                     </Div>  )\n// export const Icon       = memo( (props:IGlobalProps) => <Div               {...props}> {props.children}                     </Div>  )\n// export const Lable      = memo( (props:IGlobalProps) => <Div Flex XYcenter {...props}> {props.children}                     </Div>  )\n// export const Name       = memo( (props:IGlobalProps) => <Div Flex XYcenter {...props}> {props.children}                     </Div>  )\n// export const Flex       = memo( (props:IGlobalProps) => <Div Flex          {...props}> {props.children}                     </Div>  )\n// export const Copyright  = memo( (props:IGlobalProps) => <Div Flex XYcenter {...props}> {props.value ||\"כל הזכויות שמורות\"} </Div>  )    \n// \n_c6 = Grid;\nexport const Container = props => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n_c7 = Container;\nexport const Main = props => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n_c8 = Main;\nexport const Footer = props => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n_c9 = Footer;\nexport const Nav = props => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n_c10 = Nav;\nexport const Header = props => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n_c11 = Header;\nexport const Aside = props => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n_c12 = Aside;\nexport const Box = props => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n_c13 = Box;\nexport const Icon = props => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n_c14 = Icon;\nexport const Lable = props => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n_c15 = Lable;\nexport const Name = props => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n_c16 = Name;\nexport const Flex = props => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n_c17 = Flex;\nexport const Copyright = props => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n_c18 = Copyright;\nexport const Button = _s(React.memo(_c19 = _s(function (props) {\n  _s();\n  let {\n    dispatch,\n    actions\n  } = useStore();\n  const GoPage = event => {\n    if (props.toPage) dispatch(actions.setMainPage(props.toPage));\n    if (props.toSubPage) dispatch(actions.setSubPage(props.toSubPage));\n    if (props.onClick) props.onClick(event);\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    border: true,\n    pointer: true,\n    XYcenter: true,\n    onClick: x => GoPage(x),\n    ...props,\n    children: [\" \", props.value || \"\", \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n  // return <></>\n}, \"mVeBGO642bPt461Wu55cNCHFNBc=\", false, function () {\n  return [useStore];\n})), \"mVeBGO642bPt461Wu55cNCHFNBc=\", false, function () {\n  return [useStore];\n});\n_c20 = Button;\nexport const Menu = props => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n_c21 = Menu;\nexport const Choice = props => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n// export const Menu = memo((props:IMenuProps)=> <Flex XYcenter {...props}> {props.children}</Flex>)\n\n// export const Choice = memo((props:IChiceProps)=><Button inlineFlex styleOverrid={props.selected?props.onSelectedStyle:null} {...props}>{props.value}</Button>)\n_c22 = Choice;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22;\n$RefreshReg$(_c, \"Div$memo\");\n$RefreshReg$(_c2, \"Div\");\n$RefreshReg$(_c3, \"Img$memo\");\n$RefreshReg$(_c4, \"Img\");\n$RefreshReg$(_c5, \"Grid$memo\");\n$RefreshReg$(_c6, \"Grid\");\n$RefreshReg$(_c7, \"Container\");\n$RefreshReg$(_c8, \"Main\");\n$RefreshReg$(_c9, \"Footer\");\n$RefreshReg$(_c10, \"Nav\");\n$RefreshReg$(_c11, \"Header\");\n$RefreshReg$(_c12, \"Aside\");\n$RefreshReg$(_c13, \"Box\");\n$RefreshReg$(_c14, \"Icon\");\n$RefreshReg$(_c15, \"Lable\");\n$RefreshReg$(_c16, \"Name\");\n$RefreshReg$(_c17, \"Flex\");\n$RefreshReg$(_c18, \"Copyright\");\n$RefreshReg$(_c19, \"Button$React.memo\");\n$RefreshReg$(_c20, \"Button\");\n$RefreshReg$(_c21, \"Menu\");\n$RefreshReg$(_c22, \"Choice\");","map":{"version":3,"names":["GridBtn","GlobalStyle","memo","React","useStore","RandomString","jsxDEV","_jsxDEV","Fragment","_Fragment","numberBtnGrid","Div","_c","props","Empty","className","style","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Img","_c3","src","bgImg","width","height","_c4","Grid","_c5","GD","ForClassName","top","_c6","Container","_c7","Main","_c8","Footer","_c9","Nav","_c10","Header","_c11","Aside","_c12","Box","_c13","Icon","_c14","Lable","_c15","Name","_c16","Flex","_c17","Copyright","_c18","Button","_s","_c19","dispatch","actions","GoPage","event","toPage","setMainPage","toSubPage","setSubPage","border","pointer","XYcenter","x","value","_c20","Menu","_c21","Choice","_c22","$RefreshReg$"],"sources":["H:/Project/version3/client/src/Components/Containers.tsx"],"sourcesContent":["import { GridBtn } from \"../devComponent\";\r\nimport { GlobalStyle, memo ,React, useStore , RandomString} from \"../importAll\"\r\n\r\nlet numberBtnGrid = 0;\r\n\r\n\r\nexport const Div  = memo((props:IGlobalProps) => !props.Empty? <div className={props.className} style={GlobalStyle(props)} onClick={props.onClick} > {props.children} </div>  :   <>{props.children}</>    )\r\nexport const Img  = memo((props:IGlobalProps) => <img  src={props.bgImg} style={GlobalStyle(props)} width={\"100%\"} height={\"auto\"} />)\r\n\r\nexport const Grid = memo((props:IGlobalProps,GD=RandomString(10)) => <><Div className={GD} {...props}>{props.children}</Div> <GridBtn ForClassName={GD} top={numberBtnGrid++}/> </>)\r\n\r\n// export const Container  = memo( (props:IGlobalProps) => <Grid              {...props}> {props.children}                     </Grid> )\r\n// export const Main       = memo( (props:IGlobalProps) => <Grid              {...props}> {props.children}                     </Grid> )\r\n// export const Footer     = memo( (props:IGlobalProps) => <Grid              {...props}> {props.children}                     </Grid> )\r\n// export const Nav        = memo( (props:IGlobalProps) => <Div               {...props}> {props.children}                     </Div>  )\r\n// export const Header     = memo( (props:IGlobalProps) => <Div               {...props}> {props.children}                     </Div>  )\r\n// export const Aside      = memo( (props:IGlobalProps) => <Div               {...props}> {props.children}                     </Div>  )\r\n// export const Box        = memo( (props:IGlobalProps) => <Div               {...props}> {props.children}                     </Div>  )\r\n// export const Icon       = memo( (props:IGlobalProps) => <Div               {...props}> {props.children}                     </Div>  )\r\n// export const Lable      = memo( (props:IGlobalProps) => <Div Flex XYcenter {...props}> {props.children}                     </Div>  )\r\n// export const Name       = memo( (props:IGlobalProps) => <Div Flex XYcenter {...props}> {props.children}                     </Div>  )\r\n// export const Flex       = memo( (props:IGlobalProps) => <Div Flex          {...props}> {props.children}                     </Div>  )\r\n// export const Copyright  = memo( (props:IGlobalProps) => <Div Flex XYcenter {...props}> {props.value ||\"כל הזכויות שמורות\"} </Div>  )    \r\n// \r\nexport const Container = (props:any)=><></>\r\nexport const Main      = (props:any)=><></>\r\nexport const Footer    = (props:any)=><></>\r\nexport const Nav       = (props:any)=><></>\r\nexport const Header    = (props:any)=><></>\r\nexport const Aside     = (props:any)=><></>\r\nexport const Box       = (props:any)=><></>\r\nexport const Icon      = (props:any)=><></>\r\nexport const Lable     = (props:any)=><></>\r\nexport const Name      = (props:any)=><></>\r\nexport const Flex      = (props:any)=><></>\r\nexport const Copyright = (props:any)=><></>\r\n\r\n\r\n\r\n\r\nexport const Button = React.memo(function(props:IButtonProps){\r\n    let {dispatch,actions} = useStore();\r\n    const GoPage = (event:any) =>{\r\n        if(props.toPage)    dispatch(actions.setMainPage(props.toPage))\r\n        if(props.toSubPage) dispatch(actions.setSubPage(props.toSubPage))\r\n        if(props.onClick)   props.onClick(event)\r\n    }\r\n    return <Flex border pointer XYcenter onClick={(x:any)=>GoPage(x)} {...props}> {props.value ||\"\"} </Flex>\r\n    // return <></>\r\n})\r\n\r\n\r\nexport const Menu = (props:any) =><></>\r\nexport const Choice = (props:any) =><></>\r\n\r\n// export const Menu = memo((props:IMenuProps)=> <Flex XYcenter {...props}> {props.children}</Flex>)\r\n\r\n\r\n// export const Choice = memo((props:IChiceProps)=><Button inlineFlex styleOverrid={props.selected?props.onSelectedStyle:null} {...props}>{props.value}</Button>)\r\n\r\n\r\n\r\ninterface IButtonProps extends IGlobalProps{\r\n    toPage    ?: AllMainPagesType;\r\n    toSubPage ?: AllSubPagesType;\r\n}\r\n\r\ninterface IMenuProps extends IGlobalProps{\r\n    onSelected?:React.CSSProperties;\r\n}\r\ninterface IChiceProps extends IButtonProps{\r\n    onSelectedStyle?:React.CSSProperties;\r\n    selected? : boolean;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}