{"ast":null,"code":"import { ConvertPoint } from \"../../importAll\";\nlet colorCounter = 0;\nlet bgcounter = 0;\nlet colors = [\"black\", \"red\", \"green\", \"blue\", \"yellow\"];\nlet backgrouds = (x, count) => {\n  console.log(typeof x);\n  if (typeof x == \"string\") {\n    return x;\n  }\n  let backgrouds = [\"pink\", \"red\", \"green\", \"blue\", \"yellow\"];\n  return backgrouds[count];\n};\nfunction GlobalStyle(props, _display, obj) {\n  let result = {\n    backgroundSize: \"contain\",\n    backgroundRepeat: `no-repeat`\n  };\n  if (_display) result[\"display\"] = _display;\n  if (props.XYcenter) {\n    result[\"justifyContent\"] = \"center\";\n    result[\"alignItems\"] = \"center\";\n  }\n  if (props.Xcenter) result[\"justifyContent\"] = \"center\";\n  if (props.Xcenter) result[\"alignItems\"] = \"center\";\n  if (props.border && typeof props.border == \"boolean\") result[\"border\"] = `1px solid ${colors[colorCounter++ % 5]}`;else if (props.border && typeof props.border == \"string\") result[\"border\"] = props.border;\n  if (props.width) result[\"width\"] = props.width;\n  if (props.height) result[\"height\"] = props.height;\n  if (props.marginTop) result[\"marginTop\"] = props.marginTop;\n  if (props.marginLeft) result[\"marginLeft\"] = props.marginLeft;\n  if (props.marginRight) result[\"marginRight\"] = props.marginRight;\n  if (props.marginBottom) result[\"marginBottom\"] = props.marginBottom;\n  if (props.margin) result[\"margin\"] = props.margin;\n  if (props.paddingTop) result[\"paddingTop\"] = props.paddingTop;\n  if (props.paddingLeft) result[\"paddingLeft\"] = props.paddingLeft;\n  if (props.paddingRight) result[\"paddingRight\"] = props.paddingRight;\n  if (props.paddingBottom) result[\"paddingBottom\"] = props.paddingBottom;\n  if (props.padding) result[\"padding\"] = props.padding;\n  if (props.align) result[\"textAlign\"] = props.align;\n  if (props.rows) result[\"gridTemplateRows\"] = `repeat(${props.rows},1fr)`;\n  if (props.columns) result[\"gridTemplateColumns\"] = `repeat(${props.columns},1fr)`;\n  if (props.cols) result[\"gridTemplateColumns\"] = `repeat(${props.cols},1fr)`;\n  if (props.rtl) result[\"direction\"] = \"rtl\";\n  if (props.ltr) result[\"direction\"] = \"ltr\";\n  if (props.fSize) result[\"fontSize\"] = props.fSize;\n  if (props.underline) result[\"textDecoration\"] = \"underline\";\n  if (props.start && props.end) {\n    result[\"gridColumn\"] = `${ConvertPoint(props.start)[0]}/${ConvertPoint(props.end)[0]}`;\n    result[\"gridRow\"] = `${ConvertPoint(props.start)[1]}/${ConvertPoint(props.end)[1]}`;\n  }\n  if (props.position) {\n    let start = props.position.split(\"|\")[0];\n    let end = props.position.split(\"|\")[1];\n    result[\"gridColumn\"] = `${ConvertPoint(start)[0]}/${ConvertPoint(end)[0]}`;\n    result[\"gridRow\"] = `${ConvertPoint(start)[1]}/${ConvertPoint(end)[1]}`;\n  }\n  if (props.family) result[\"fontFamily\"] = props.family;\n  if (props.flexDirection) result[\"flexDirection\"] = props.flexDirection;\n  if (props.scroll) result[\"overflow\"] = \"auto\";\n  if (props.wrap) result[\"flexWrap\"] = \"wrap\";\n  if (props.bgColor && typeof props.bgColor == \"boolean\") result[\"backgroundColor\"] = `${backgrouds(props.bgColor, bgcounter++ % 5)}`;else if (props.bgColor && typeof props.bgColor == \"string\") result[\"backgroundColor\"] = props.bgColor;\n  if (props.bgImg) result[\"backgroundImage\"] = `url(${props.bgImg})`;\n  return result;\n}\n_c = GlobalStyle;\nexport default GlobalStyle;\nvar _c;\n$RefreshReg$(_c, \"GlobalStyle\");","map":{"version":3,"names":["ConvertPoint","colorCounter","bgcounter","colors","backgrouds","x","count","console","log","GlobalStyle","props","_display","obj","result","backgroundSize","backgroundRepeat","XYcenter","Xcenter","border","width","height","marginTop","marginLeft","marginRight","marginBottom","margin","paddingTop","paddingLeft","paddingRight","paddingBottom","padding","align","rows","columns","cols","rtl","ltr","fSize","underline","start","end","position","split","family","flexDirection","scroll","wrap","bgColor","bgImg","_c","$RefreshReg$"],"sources":["H:/Project/version3/client/src/Components/Global/GlobalStyle.ts"],"sourcesContent":["import { count } from \"console\";\r\nimport { ConvertPoint } from \"../../importAll\";\r\n\r\nlet colorCounter = 0\r\nlet bgcounter = 0\r\nlet colors =[\r\n    \"black\",\"red\",\"green\",\"blue\",\"yellow\"\r\n];\r\n\r\nlet backgrouds = (x:string | boolean , count:number):any =>{\r\n    console.log(typeof x )\r\n    if(typeof x == \"string\"){\r\n        return x;\r\n    }\r\n    let backgrouds = [\"pink\",\"red\",\"green\",\"blue\",\"yellow\"]\r\n    return backgrouds[count]\r\n}\r\n\r\nfunction GlobalStyle(props:IGlobalProps ,_display?:string , obj?:IGlobalProps ){\r\n    let result :React.CSSProperties={\r\n        backgroundSize        :\"contain\",\r\n        backgroundRepeat      :`no-repeat`,\r\n    };\r\n\r\n    if (_display)\r\n        result[\"display\"] = _display;\r\n    if (props.XYcenter){\r\n        result[\"justifyContent\"] = \"center\";\r\n        result[\"alignItems\"]     = \"center\";\r\n    }\r\n    if (props.Xcenter)\r\n        result[\"justifyContent\"] = \"center\";\r\n    if (props.Xcenter)\r\n        result[\"alignItems\"] = \"center\";\r\n\r\n    if (props.border && typeof props.border == \"boolean\")\r\n        result[\"border\"] = `1px solid ${colors[colorCounter++%5]}`\r\n    else if (props.border && typeof props.border == \"string\")\r\n        result[\"border\"] = props.border\r\n\r\n    if (props.width)\r\n        result[\"width\"] = props.width;\r\n    if (props.height)\r\n        result[\"height\"] = props.height;\r\n\r\n    if (props.marginTop)\r\n        result[\"marginTop\"] = props.marginTop;\r\n    if (props.marginLeft)\r\n        result[\"marginLeft\"] = props.marginLeft;\r\n    if (props.marginRight)\r\n        result[\"marginRight\"] = props.marginRight;\r\n    if (props.marginBottom)\r\n        result[\"marginBottom\"] = props.marginBottom;\r\n    if (props.margin)\r\n        result[\"margin\"] = props.margin;\r\n\r\n    if (props.paddingTop)\r\n        result[\"paddingTop\"] = props.paddingTop;\r\n    if (props.paddingLeft)\r\n        result[\"paddingLeft\"] = props.paddingLeft;\r\n    if (props.paddingRight)\r\n        result[\"paddingRight\"] = props.paddingRight;\r\n    if (props.paddingBottom)\r\n        result[\"paddingBottom\"] = props.paddingBottom;\r\n    if (props.padding)\r\n        result[\"padding\"] = props.padding;\r\n\r\n    if (props.align)\r\n        result[\"textAlign\"] = props.align;\r\n\r\n        \r\n    if (props.rows)\r\n        result[\"gridTemplateRows\"] = `repeat(${props.rows},1fr)`;\r\n    if (props.columns)\r\n        result[\"gridTemplateColumns\"] = `repeat(${props.columns},1fr)`;\r\n    if (props.cols)\r\n        result[\"gridTemplateColumns\"] = `repeat(${props.cols},1fr)`;\r\n\r\n    if (props.rtl)\r\n        result[\"direction\"] = \"rtl\";\r\n    if (props.ltr)\r\n        result[\"direction\"] = \"ltr\";\r\n\r\n    if (props.fSize)\r\n        result[\"fontSize\"] = props.fSize;\r\n\r\n\r\n    if (props.underline)\r\n        result[\"textDecoration\"] = \"underline\";\r\n\r\n    if (props.start && props.end){\r\n        result[\"gridColumn\"] = `${ConvertPoint(props.start)[0]}/${ConvertPoint(props.end)[0]}`;\r\n        result[\"gridRow\"]    = `${ConvertPoint(props.start)[1]}/${ConvertPoint(props.end)[1]}`;\r\n    }\r\n\r\n    if (props.position){\r\n        let start = props.position.split(\"|\")[0];\r\n        let end = props.position.split(\"|\")[1];\r\n        result[\"gridColumn\"] = `${ConvertPoint(start)[0]}/${ConvertPoint(end)[0]}`;\r\n        result[\"gridRow\"]    = `${ConvertPoint(start)[1]}/${ConvertPoint(end)[1]}`;\r\n    }\r\n\r\n\r\n    if (props.family)\r\n        result[\"fontFamily\"] = props.family;\r\n\r\n    if (props.flexDirection)\r\n        result[\"flexDirection\"] = props.flexDirection;\r\n\r\n    if (props.scroll)\r\n        result[\"overflow\"] = \"auto\";\r\n\r\n    if (props.wrap)\r\n        result[\"flexWrap\"] = \"wrap\";\r\n\r\n\r\n    if (props.bgColor && typeof props.bgColor == \"boolean\")\r\n        result[\"backgroundColor\"] = `${backgrouds(props.bgColor,bgcounter++%5)}`;\r\n    else if (props.bgColor && typeof props.bgColor == \"string\")\r\n        result[\"backgroundColor\"] = props.bgColor;\r\n\r\n    if (props.bgImg)\r\n        result[\"backgroundImage\"] = `url(${props.bgImg})`;\r\n\r\n    return result;\r\n}\r\n\r\n\r\n\r\n\r\nexport default GlobalStyle;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}