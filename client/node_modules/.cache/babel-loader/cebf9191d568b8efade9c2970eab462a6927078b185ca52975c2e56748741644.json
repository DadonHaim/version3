{"ast":null,"code":"import { ConvertPoint } from \"../importAll\";\nlet colorCounter = 0;\nlet bgcounter = 0;\nlet colors = [\"black\", \"red\", \"green\", \"blue\", \"yellow\"];\nlet backgrouds = (x, count) => {\n  console.log(typeof x);\n  if (typeof x == \"string\") {\n    return x;\n  }\n  let backgrouds = [\"pink\", \"red\", \"green\", \"blue\", \"yellow\"];\n  return backgrouds[count];\n};\nfunction GlobalStyle(_props, obj) {\n  let props;\n  if (_props.styleOverrid && obj) props = {\n    ..._props,\n    ..._props.styleOverrid,\n    ...obj\n  };else if (_props.styleOverrid) props = {\n    ..._props,\n    ..._props.styleOverrid\n  };else if (obj) props = {\n    ..._props,\n    ...obj\n  };else props = {\n    ..._props\n  };\n  let result = {\n    backgroundSize: \"contain\",\n    backgroundRepeat: `no-repeat`\n  };\n  if (props.Grid) result[\"display\"] = \"grid\";else if (props.Flex && props.inlineFlex) result[\"display\"] = \"inline-flex\";else if (props.Flex) result[\"display\"] = \"flex\";\n  if (props.XYcenter) {\n    result[\"justifyContent\"] = \"center\";\n    result[\"alignItems\"] = \"center\";\n  }\n  if (props.Xcenter) result[\"justifyContent\"] = \"center\";\n  if (props.Xcenter) result[\"alignItems\"] = \"center\";\n  if (props.border && typeof props.border == \"boolean\") result[\"border\"] = `1px solid ${colors[colorCounter++ % 5]}`;else if (props.border && typeof props.border == \"string\") result[\"border\"] = props.border;\n  if (props.pointer) result[\"cursor\"] = \"pointer\";\n  if (props.width) result[\"width\"] = props.width;\n  if (props.height) result[\"height\"] = props.height;\n  if (props.marginTop) result[\"marginTop\"] = props.marginTop;\n  if (props.marginLeft) result[\"marginLeft\"] = props.marginLeft;\n  if (props.marginRight) result[\"marginRight\"] = props.marginRight;\n  if (props.marginBottom) result[\"marginBottom\"] = props.marginBottom;\n  if (props.margin) result[\"margin\"] = props.margin;\n  if (props.paddingTop) result[\"paddingTop\"] = props.paddingTop;\n  if (props.paddingLeft) result[\"paddingLeft\"] = props.paddingLeft;\n  if (props.paddingRight) result[\"paddingRight\"] = props.paddingRight;\n  if (props.paddingBottom) result[\"paddingBottom\"] = props.paddingBottom;\n  if (props.padding) result[\"padding\"] = props.padding;\n  if (props.align) result[\"textAlign\"] = props.align;\n  if (props.rows) result[\"gridTemplateRows\"] = `repeat(${props.rows},1fr)`;\n  if (props.columns) result[\"gridTemplateColumns\"] = `repeat(${props.columns},1fr)`;\n  if (props.cols) result[\"gridTemplateColumns\"] = `repeat(${props.cols},1fr)`;\n  if (props.grid) {\n    let point = ConvertPoint(props.grid);\n    result[\"gridTemplateColumns\"] = `repeat(${point[0]},1fr)`;\n    result[\"gridTemplateRows\"] = `repeat(${point[1]},1fr)`;\n  }\n  if (props.Grid && typeof props.Grid != \"boolean\") {\n    result[\"gridTemplateColumns\"] = `repeat(${props.Grid},1fr)`;\n    result[\"gridTemplateRows\"] = `repeat(${props.Grid},1fr)`;\n  }\n  if (props.rtl) result[\"direction\"] = \"rtl\";\n  if (props.ltr) result[\"direction\"] = \"ltr\";\n  if (props.fSize) result[\"fontSize\"] = props.fSize;\n  if (props.underline) result[\"textDecoration\"] = \"underline\";\n  if (props.start && props.end) {\n    result[\"gridColumn\"] = `${ConvertPoint(props.start)[0]}/${ConvertPoint(props.end)[0]}`;\n    result[\"gridRow\"] = `${ConvertPoint(props.start)[1]}/${ConvertPoint(props.end)[1]}`;\n  }\n  if (props.position) {\n    let start = props.position.split(\"|\")[0];\n    let end = props.position.split(\"|\")[1];\n    result[\"gridColumn\"] = `${ConvertPoint(start)[0]}/${ConvertPoint(end)[0]}`;\n    result[\"gridRow\"] = `${ConvertPoint(start)[1]}/${ConvertPoint(end)[1]}`;\n  }\n  if (props.family) result[\"fontFamily\"] = props.family;\n  if (props.flexDirection) result[\"flexDirection\"] = props.flexDirection;\n  if (props.scroll) result[\"overflow\"] = \"auto\";\n  if (props.wrap) result[\"flexWrap\"] = \"wrap\";\n  if (props.bgColor && typeof props.bgColor == \"boolean\") result[\"backgroundColor\"] = `${backgrouds(props.bgColor, bgcounter++ % 5)}`;else if (props.bgColor && typeof props.bgColor == \"string\") result[\"backgroundColor\"] = props.bgColor;\n  if (props.bgImg) result[\"backgroundImage\"] = `url(${props.bgImg})`;\n  if (props.zIndex) result[\"zIndex\"] = props.zIndex;\n  return result;\n}\n_c = GlobalStyle;\nexport default GlobalStyle;\nvar _c;\n$RefreshReg$(_c, \"GlobalStyle\");","map":{"version":3,"names":["ConvertPoint","colorCounter","bgcounter","colors","backgrouds","x","count","console","log","GlobalStyle","_props","obj","props","styleOverrid","result","backgroundSize","backgroundRepeat","Grid","Flex","inlineFlex","XYcenter","Xcenter","border","pointer","width","height","marginTop","marginLeft","marginRight","marginBottom","margin","paddingTop","paddingLeft","paddingRight","paddingBottom","padding","align","rows","columns","cols","grid","point","rtl","ltr","fSize","underline","start","end","position","split","family","flexDirection","scroll","wrap","bgColor","bgImg","zIndex","_c","$RefreshReg$"],"sources":["H:/Project/version3/client/src/Components/GlobalStyle.ts"],"sourcesContent":["import { ConvertPoint } from \"../importAll\";\r\n\r\nlet colorCounter = 0\r\nlet bgcounter = 0\r\nlet colors =[\r\n    \"black\",\"red\",\"green\",\"blue\",\"yellow\"\r\n];\r\n\r\nlet backgrouds = (x:string | boolean , count:number):any =>{\r\n    console.log(typeof x )\r\n    if(typeof x == \"string\"){\r\n        return x;\r\n    }\r\n    let backgrouds = [\"pink\",\"red\",\"green\",\"blue\",\"yellow\"]\r\n    return backgrouds[count]\r\n}\r\n\r\nfunction GlobalStyle(_props:IGlobalProps , obj?:IGlobalProps ){\r\n    let props;\r\n    if(_props.styleOverrid && obj)\r\n        props = {..._props,..._props.styleOverrid ,...obj}\r\n    else if(_props.styleOverrid)\r\n        props = {..._props , ..._props.styleOverrid};\r\n    else if(obj)\r\n        props = {..._props , ...obj};\r\n    else\r\n        props = {..._props};\r\n    \r\n    \r\n\r\n    let result :React.CSSProperties={\r\n        backgroundSize        :\"contain\",\r\n        backgroundRepeat      :`no-repeat`,\r\n    };\r\n\r\n    if(props.Grid)\r\n        result[\"display\"] = \"grid\";\r\n    else if(props.Flex && props.inlineFlex)\r\n        result[\"display\"] = \"inline-flex\";\r\n    else if(props.Flex)\r\n        result[\"display\"] = \"flex\";\r\n\r\n    if (props.XYcenter){\r\n        result[\"justifyContent\"] = \"center\";\r\n        result[\"alignItems\"]     = \"center\";\r\n    }\r\n    if (props.Xcenter)\r\n        result[\"justifyContent\"] = \"center\";\r\n    if (props.Xcenter)\r\n        result[\"alignItems\"] = \"center\";\r\n\r\n    if (props.border && typeof props.border == \"boolean\")\r\n        result[\"border\"] = `1px solid ${colors[colorCounter++%5]}`\r\n    else if (props.border && typeof props.border == \"string\")\r\n        result[\"border\"] = props.border\r\n\r\n    if(props.pointer)\r\n        result[\"cursor\"] = \"pointer\";\r\n\r\n\r\n    if (props.width)\r\n        result[\"width\"] = props.width;\r\n    if (props.height)\r\n        result[\"height\"] = props.height;\r\n\r\n    if (props.marginTop)\r\n        result[\"marginTop\"] = props.marginTop;\r\n    if (props.marginLeft)\r\n        result[\"marginLeft\"] = props.marginLeft;\r\n    if (props.marginRight)\r\n        result[\"marginRight\"] = props.marginRight;\r\n    if (props.marginBottom)\r\n        result[\"marginBottom\"] = props.marginBottom;\r\n    if (props.margin)\r\n        result[\"margin\"] = props.margin;\r\n\r\n    if (props.paddingTop)\r\n        result[\"paddingTop\"] = props.paddingTop;\r\n    if (props.paddingLeft)\r\n        result[\"paddingLeft\"] = props.paddingLeft;\r\n    if (props.paddingRight)\r\n        result[\"paddingRight\"] = props.paddingRight;\r\n    if (props.paddingBottom)\r\n        result[\"paddingBottom\"] = props.paddingBottom;\r\n    if (props.padding)\r\n        result[\"padding\"] = props.padding;\r\n\r\n    if (props.align)\r\n        result[\"textAlign\"] = props.align;\r\n\r\n        \r\n    if (props.rows)\r\n        result[\"gridTemplateRows\"] = `repeat(${props.rows},1fr)`;\r\n    if (props.columns)\r\n        result[\"gridTemplateColumns\"] = `repeat(${props.columns},1fr)`;\r\n    if (props.cols)\r\n        result[\"gridTemplateColumns\"] = `repeat(${props.cols},1fr)`;\r\n    if(props.grid){\r\n        let point = ConvertPoint(props.grid)\r\n        result[\"gridTemplateColumns\"] = `repeat(${point[0]},1fr)`;\r\n        result[\"gridTemplateRows\"]    = `repeat(${point[1]},1fr)`;\r\n    }\r\n    if(props.Grid && typeof props.Grid != \"boolean\"){\r\n        result[\"gridTemplateColumns\"] = `repeat(${props.Grid},1fr)`;\r\n        result[\"gridTemplateRows\"]    = `repeat(${props.Grid},1fr)`;\r\n    }\r\n\r\n    if (props.rtl)\r\n        result[\"direction\"] = \"rtl\";\r\n    if (props.ltr)\r\n        result[\"direction\"] = \"ltr\";\r\n\r\n    if (props.fSize)\r\n        result[\"fontSize\"] = props.fSize;\r\n\r\n\r\n    if (props.underline)\r\n        result[\"textDecoration\"] = \"underline\";\r\n\r\n    if (props.start && props.end){\r\n        result[\"gridColumn\"] = `${ConvertPoint(props.start)[0]}/${ConvertPoint(props.end)[0]}`;\r\n        result[\"gridRow\"]    = `${ConvertPoint(props.start)[1]}/${ConvertPoint(props.end)[1]}`;\r\n    }\r\n\r\n    if (props.position){\r\n        let start = props.position.split(\"|\")[0];\r\n        let end = props.position.split(\"|\")[1];\r\n        result[\"gridColumn\"] = `${ConvertPoint(start)[0]}/${ConvertPoint(end)[0]}`;\r\n        result[\"gridRow\"]    = `${ConvertPoint(start)[1]}/${ConvertPoint(end)[1]}`;\r\n    }\r\n\r\n\r\n    if (props.family)\r\n        result[\"fontFamily\"] = props.family;\r\n\r\n    if (props.flexDirection)\r\n        result[\"flexDirection\"] = props.flexDirection;\r\n\r\n    if (props.scroll)\r\n        result[\"overflow\"] = \"auto\";\r\n\r\n    if (props.wrap)\r\n        result[\"flexWrap\"] = \"wrap\";\r\n\r\n\r\n    if (props.bgColor && typeof props.bgColor == \"boolean\")\r\n        result[\"backgroundColor\"] = `${backgrouds(props.bgColor,bgcounter++%5)}`;\r\n    else if (props.bgColor && typeof props.bgColor == \"string\")\r\n        result[\"backgroundColor\"] = props.bgColor;\r\n\r\n    if (props.bgImg)\r\n        result[\"backgroundImage\"] = `url(${props.bgImg})`;\r\n\r\n    if (props.zIndex)\r\n        result[\"zIndex\"] = props.zIndex;\r\n\r\n\r\n    return result;\r\n}\r\n\r\n\r\n\r\n\r\nexport default GlobalStyle;\r\n\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,cAAc;AAE3C,IAAIC,YAAY,GAAG,CAAC;AACpB,IAAIC,SAAS,GAAG,CAAC;AACjB,IAAIC,MAAM,GAAE,CACR,OAAO,EAAC,KAAK,EAAC,OAAO,EAAC,MAAM,EAAC,QAAQ,CACxC;AAED,IAAIC,UAAU,GAAGA,CAACC,CAAkB,EAAGC,KAAY,KAAQ;EACvDC,OAAO,CAACC,GAAG,CAAC,OAAOH,CAAE,CAAC;EACtB,IAAG,OAAOA,CAAC,IAAI,QAAQ,EAAC;IACpB,OAAOA,CAAC;EACZ;EACA,IAAID,UAAU,GAAG,CAAC,MAAM,EAAC,KAAK,EAAC,OAAO,EAAC,MAAM,EAAC,QAAQ,CAAC;EACvD,OAAOA,UAAU,CAACE,KAAK,CAAC;AAC5B,CAAC;AAED,SAASG,WAAWA,CAACC,MAAmB,EAAGC,GAAiB,EAAE;EAC1D,IAAIC,KAAK;EACT,IAAGF,MAAM,CAACG,YAAY,IAAIF,GAAG,EACzBC,KAAK,GAAG;IAAC,GAAGF,MAAM;IAAC,GAAGA,MAAM,CAACG,YAAY;IAAE,GAAGF;EAAG,CAAC,MACjD,IAAGD,MAAM,CAACG,YAAY,EACvBD,KAAK,GAAG;IAAC,GAAGF,MAAM;IAAG,GAAGA,MAAM,CAACG;EAAY,CAAC,CAAC,KAC5C,IAAGF,GAAG,EACPC,KAAK,GAAG;IAAC,GAAGF,MAAM;IAAG,GAAGC;EAAG,CAAC,CAAC,KAE7BC,KAAK,GAAG;IAAC,GAAGF;EAAM,CAAC;EAIvB,IAAII,MAA2B,GAAC;IAC5BC,cAAc,EAAS,SAAS;IAChCC,gBAAgB,EAAQ;EAC5B,CAAC;EAED,IAAGJ,KAAK,CAACK,IAAI,EACTH,MAAM,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,KAC1B,IAAGF,KAAK,CAACM,IAAI,IAAIN,KAAK,CAACO,UAAU,EAClCL,MAAM,CAAC,SAAS,CAAC,GAAG,aAAa,CAAC,KACjC,IAAGF,KAAK,CAACM,IAAI,EACdJ,MAAM,CAAC,SAAS,CAAC,GAAG,MAAM;EAE9B,IAAIF,KAAK,CAACQ,QAAQ,EAAC;IACfN,MAAM,CAAC,gBAAgB,CAAC,GAAG,QAAQ;IACnCA,MAAM,CAAC,YAAY,CAAC,GAAO,QAAQ;EACvC;EACA,IAAIF,KAAK,CAACS,OAAO,EACbP,MAAM,CAAC,gBAAgB,CAAC,GAAG,QAAQ;EACvC,IAAIF,KAAK,CAACS,OAAO,EACbP,MAAM,CAAC,YAAY,CAAC,GAAG,QAAQ;EAEnC,IAAIF,KAAK,CAACU,MAAM,IAAI,OAAOV,KAAK,CAACU,MAAM,IAAI,SAAS,EAChDR,MAAM,CAAC,QAAQ,CAAC,GAAI,aAAYX,MAAM,CAACF,YAAY,EAAE,GAAC,CAAC,CAAE,EAAC,MACzD,IAAIW,KAAK,CAACU,MAAM,IAAI,OAAOV,KAAK,CAACU,MAAM,IAAI,QAAQ,EACpDR,MAAM,CAAC,QAAQ,CAAC,GAAGF,KAAK,CAACU,MAAM;EAEnC,IAAGV,KAAK,CAACW,OAAO,EACZT,MAAM,CAAC,QAAQ,CAAC,GAAG,SAAS;EAGhC,IAAIF,KAAK,CAACY,KAAK,EACXV,MAAM,CAAC,OAAO,CAAC,GAAGF,KAAK,CAACY,KAAK;EACjC,IAAIZ,KAAK,CAACa,MAAM,EACZX,MAAM,CAAC,QAAQ,CAAC,GAAGF,KAAK,CAACa,MAAM;EAEnC,IAAIb,KAAK,CAACc,SAAS,EACfZ,MAAM,CAAC,WAAW,CAAC,GAAGF,KAAK,CAACc,SAAS;EACzC,IAAId,KAAK,CAACe,UAAU,EAChBb,MAAM,CAAC,YAAY,CAAC,GAAGF,KAAK,CAACe,UAAU;EAC3C,IAAIf,KAAK,CAACgB,WAAW,EACjBd,MAAM,CAAC,aAAa,CAAC,GAAGF,KAAK,CAACgB,WAAW;EAC7C,IAAIhB,KAAK,CAACiB,YAAY,EAClBf,MAAM,CAAC,cAAc,CAAC,GAAGF,KAAK,CAACiB,YAAY;EAC/C,IAAIjB,KAAK,CAACkB,MAAM,EACZhB,MAAM,CAAC,QAAQ,CAAC,GAAGF,KAAK,CAACkB,MAAM;EAEnC,IAAIlB,KAAK,CAACmB,UAAU,EAChBjB,MAAM,CAAC,YAAY,CAAC,GAAGF,KAAK,CAACmB,UAAU;EAC3C,IAAInB,KAAK,CAACoB,WAAW,EACjBlB,MAAM,CAAC,aAAa,CAAC,GAAGF,KAAK,CAACoB,WAAW;EAC7C,IAAIpB,KAAK,CAACqB,YAAY,EAClBnB,MAAM,CAAC,cAAc,CAAC,GAAGF,KAAK,CAACqB,YAAY;EAC/C,IAAIrB,KAAK,CAACsB,aAAa,EACnBpB,MAAM,CAAC,eAAe,CAAC,GAAGF,KAAK,CAACsB,aAAa;EACjD,IAAItB,KAAK,CAACuB,OAAO,EACbrB,MAAM,CAAC,SAAS,CAAC,GAAGF,KAAK,CAACuB,OAAO;EAErC,IAAIvB,KAAK,CAACwB,KAAK,EACXtB,MAAM,CAAC,WAAW,CAAC,GAAGF,KAAK,CAACwB,KAAK;EAGrC,IAAIxB,KAAK,CAACyB,IAAI,EACVvB,MAAM,CAAC,kBAAkB,CAAC,GAAI,UAASF,KAAK,CAACyB,IAAK,OAAM;EAC5D,IAAIzB,KAAK,CAAC0B,OAAO,EACbxB,MAAM,CAAC,qBAAqB,CAAC,GAAI,UAASF,KAAK,CAAC0B,OAAQ,OAAM;EAClE,IAAI1B,KAAK,CAAC2B,IAAI,EACVzB,MAAM,CAAC,qBAAqB,CAAC,GAAI,UAASF,KAAK,CAAC2B,IAAK,OAAM;EAC/D,IAAG3B,KAAK,CAAC4B,IAAI,EAAC;IACV,IAAIC,KAAK,GAAGzC,YAAY,CAACY,KAAK,CAAC4B,IAAI,CAAC;IACpC1B,MAAM,CAAC,qBAAqB,CAAC,GAAI,UAAS2B,KAAK,CAAC,CAAC,CAAE,OAAM;IACzD3B,MAAM,CAAC,kBAAkB,CAAC,GAAO,UAAS2B,KAAK,CAAC,CAAC,CAAE,OAAM;EAC7D;EACA,IAAG7B,KAAK,CAACK,IAAI,IAAI,OAAOL,KAAK,CAACK,IAAI,IAAI,SAAS,EAAC;IAC5CH,MAAM,CAAC,qBAAqB,CAAC,GAAI,UAASF,KAAK,CAACK,IAAK,OAAM;IAC3DH,MAAM,CAAC,kBAAkB,CAAC,GAAO,UAASF,KAAK,CAACK,IAAK,OAAM;EAC/D;EAEA,IAAIL,KAAK,CAAC8B,GAAG,EACT5B,MAAM,CAAC,WAAW,CAAC,GAAG,KAAK;EAC/B,IAAIF,KAAK,CAAC+B,GAAG,EACT7B,MAAM,CAAC,WAAW,CAAC,GAAG,KAAK;EAE/B,IAAIF,KAAK,CAACgC,KAAK,EACX9B,MAAM,CAAC,UAAU,CAAC,GAAGF,KAAK,CAACgC,KAAK;EAGpC,IAAIhC,KAAK,CAACiC,SAAS,EACf/B,MAAM,CAAC,gBAAgB,CAAC,GAAG,WAAW;EAE1C,IAAIF,KAAK,CAACkC,KAAK,IAAIlC,KAAK,CAACmC,GAAG,EAAC;IACzBjC,MAAM,CAAC,YAAY,CAAC,GAAI,GAAEd,YAAY,CAACY,KAAK,CAACkC,KAAK,CAAC,CAAC,CAAC,CAAE,IAAG9C,YAAY,CAACY,KAAK,CAACmC,GAAG,CAAC,CAAC,CAAC,CAAE,EAAC;IACtFjC,MAAM,CAAC,SAAS,CAAC,GAAO,GAAEd,YAAY,CAACY,KAAK,CAACkC,KAAK,CAAC,CAAC,CAAC,CAAE,IAAG9C,YAAY,CAACY,KAAK,CAACmC,GAAG,CAAC,CAAC,CAAC,CAAE,EAAC;EAC1F;EAEA,IAAInC,KAAK,CAACoC,QAAQ,EAAC;IACf,IAAIF,KAAK,GAAGlC,KAAK,CAACoC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACxC,IAAIF,GAAG,GAAGnC,KAAK,CAACoC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtCnC,MAAM,CAAC,YAAY,CAAC,GAAI,GAAEd,YAAY,CAAC8C,KAAK,CAAC,CAAC,CAAC,CAAE,IAAG9C,YAAY,CAAC+C,GAAG,CAAC,CAAC,CAAC,CAAE,EAAC;IAC1EjC,MAAM,CAAC,SAAS,CAAC,GAAO,GAAEd,YAAY,CAAC8C,KAAK,CAAC,CAAC,CAAC,CAAE,IAAG9C,YAAY,CAAC+C,GAAG,CAAC,CAAC,CAAC,CAAE,EAAC;EAC9E;EAGA,IAAInC,KAAK,CAACsC,MAAM,EACZpC,MAAM,CAAC,YAAY,CAAC,GAAGF,KAAK,CAACsC,MAAM;EAEvC,IAAItC,KAAK,CAACuC,aAAa,EACnBrC,MAAM,CAAC,eAAe,CAAC,GAAGF,KAAK,CAACuC,aAAa;EAEjD,IAAIvC,KAAK,CAACwC,MAAM,EACZtC,MAAM,CAAC,UAAU,CAAC,GAAG,MAAM;EAE/B,IAAIF,KAAK,CAACyC,IAAI,EACVvC,MAAM,CAAC,UAAU,CAAC,GAAG,MAAM;EAG/B,IAAIF,KAAK,CAAC0C,OAAO,IAAI,OAAO1C,KAAK,CAAC0C,OAAO,IAAI,SAAS,EAClDxC,MAAM,CAAC,iBAAiB,CAAC,GAAI,GAAEV,UAAU,CAACQ,KAAK,CAAC0C,OAAO,EAACpD,SAAS,EAAE,GAAC,CAAC,CAAE,EAAC,CAAC,KACxE,IAAIU,KAAK,CAAC0C,OAAO,IAAI,OAAO1C,KAAK,CAAC0C,OAAO,IAAI,QAAQ,EACtDxC,MAAM,CAAC,iBAAiB,CAAC,GAAGF,KAAK,CAAC0C,OAAO;EAE7C,IAAI1C,KAAK,CAAC2C,KAAK,EACXzC,MAAM,CAAC,iBAAiB,CAAC,GAAI,OAAMF,KAAK,CAAC2C,KAAM,GAAE;EAErD,IAAI3C,KAAK,CAAC4C,MAAM,EACZ1C,MAAM,CAAC,QAAQ,CAAC,GAAGF,KAAK,CAAC4C,MAAM;EAGnC,OAAO1C,MAAM;AACjB;AAAC2C,EAAA,GA7IQhD,WAAW;AAkJpB,eAAeA,WAAW;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}