{"ast":null,"code":"import { ConvertPoint } from \"../../importAll\";\nlet colorCounter = 0;\nlet bgcounter = 0;\nlet colors = [\"black\", \"red\", \"green\", \"blue\", \"yellow\"];\nlet backgrouds = (x, count) => {\n  console.log(typeof x);\n  if (typeof x == \"string\") {\n    return x;\n  }\n  let backgrouds = [\"pink\", \"red\", \"green\", \"blue\", \"yellow\"];\n  return backgrouds[count];\n};\nfunction _GlobalStyle(props, _display) {\n  let result = {};\n}\nconst GlobalStyle = (props, _display) => ({\n  display: _display ? _display : \"block\",\n  border: props.border ? `1px solid ${colors[colorCounter++ % 5]}` : undefined,\n  backgroundColor: props.bgColor ? `${backgrouds(props.bgColor, bgcounter++ % 5)}` : undefined,\n  backgroundImage: props.bgImg ? `url(${props.bgImg})` : undefined,\n  backgroundRepeat: `no-repeat`,\n  backgroundSize: \"contain\",\n  width: props.width,\n  height: props.height,\n  marginTop: props.marginTop ? props.marginTop : 0,\n  marginLeft: props.marginLeft ? props.marginLeft : 0,\n  marginBottom: props.marginBottom ? props.marginBottom : 0,\n  marginRight: props.marginRight ? props.marginRight : 0,\n  margin: props.margin ? props.margin : 0,\n  paddingTop: props.paddingTop ? props.paddingTop : 0,\n  paddingLeft: props.paddingLeft ? props.paddingLeft : 0,\n  paddingBottom: props.paddingBottom ? props.paddingBottom : 0,\n  paddingRight: props.paddingRight ? props.paddingRight : 0,\n  padding: props.padding ? props.padding : 0,\n  justifyContent: props.Xcenter || props.XYcenter ? `center` : undefined,\n  alignItems: props.Ycenter || props.XYcenter ? `center` : undefined,\n  textAlign: props.align ? props.align : \"left\",\n  gridTemplateColumns: props.columns ? `repeat(${props.columns},1fr)` : `repeat(19,1fr)`,\n  gridTemplateRows: props.rows ? `repeat(${props.rows},1fr)` : `repeat(19,1fr)`,\n  direction: props.rtl ? `rtl` : \"ltr\",\n  gridColumn: props.start && props.end ? `${ConvertPoint(props.start)[0]}/${ConvertPoint(props.end)[0]}` : undefined,\n  gridRow: props.start && props.end ? `${ConvertPoint(props.start)[1]}/${ConvertPoint(props.end)[1]}` : undefined,\n  fontFamily: props.family ? props.family : undefined,\n  fontSize: props.fSize ? props.fSize : undefined,\n  textDecoration: props.underline ? \"underline\" : undefined,\n  flexDirection: props.flexDirection ? props.flexDirection : undefined,\n  overflow: props.scroll ? \"auto\" : undefined,\n  flexWrap: props.wrap ? \"wrap\" : undefined\n});\n_c = GlobalStyle;\nexport default GlobalStyle;\nvar _c;\n$RefreshReg$(_c, \"GlobalStyle\");","map":{"version":3,"names":["ConvertPoint","colorCounter","bgcounter","colors","backgrouds","x","count","console","log","_GlobalStyle","props","_display","result","GlobalStyle","display","border","undefined","backgroundColor","bgColor","backgroundImage","bgImg","backgroundRepeat","backgroundSize","width","height","marginTop","marginLeft","marginBottom","marginRight","margin","paddingTop","paddingLeft","paddingBottom","paddingRight","padding","justifyContent","Xcenter","XYcenter","alignItems","Ycenter","textAlign","align","gridTemplateColumns","columns","gridTemplateRows","rows","direction","rtl","gridColumn","start","end","gridRow","fontFamily","family","fontSize","fSize","textDecoration","underline","flexDirection","overflow","scroll","flexWrap","wrap","_c","$RefreshReg$"],"sources":["H:/Project/version3/client/src/Components/Global/GlobalStyle.ts"],"sourcesContent":["import { count } from \"console\";\r\nimport { ConvertPoint } from \"../../importAll\";\r\n\r\nlet colorCounter = 0\r\nlet bgcounter = 0\r\nlet colors =[\r\n    \"black\",\"red\",\"green\",\"blue\",\"yellow\"\r\n];\r\n\r\nlet backgrouds = (x:string | boolean , count:number):any =>{\r\n    console.log(typeof x )\r\n    if(typeof x == \"string\"){\r\n        return x;\r\n    }\r\n    let backgrouds = [\"pink\",\"red\",\"green\",\"blue\",\"yellow\"]\r\n    return backgrouds[count]\r\n}\r\n\r\nfunction _GlobalStyle(props:IGlobalProps ,_display?:string){\r\n    let result :React.CSSProperties={};\r\n\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nconst GlobalStyle = (props:IGlobalProps , _display?:string) :React.CSSProperties=>({\r\n    display               :_display                       ?_display                                                         :\"block\",\r\n    border                :props.border                   ? `1px solid ${colors[colorCounter++%5]}`                         :undefined   ,\r\n    backgroundColor       :props.bgColor                  ? `${backgrouds(props.bgColor,bgcounter++%5)}`                    :undefined   ,\r\n    backgroundImage       :props.bgImg                    ? `url(${props.bgImg})`                                           :undefined   ,\r\n    backgroundRepeat      :`no-repeat`,\r\n    backgroundSize        :\"contain\",\r\n    width                 :props.width,\r\n    height                :props.height,\r\n    marginTop             :props.marginTop                ? props.marginTop                                                 : 0,     \r\n    marginLeft            :props.marginLeft               ? props.marginLeft                                                : 0,  \r\n    marginBottom          :props.marginBottom             ? props.marginBottom                                              : 0,  \r\n    marginRight           :props.marginRight              ? props.marginRight                                               : 0,  \r\n    margin                :props.margin                   ? props.margin                                                    : 0,\r\n    paddingTop            :props.paddingTop               ? props.paddingTop                                                : 0,     \r\n    paddingLeft           :props.paddingLeft              ? props.paddingLeft                                               : 0,  \r\n    paddingBottom         :props.paddingBottom            ? props.paddingBottom                                             : 0,  \r\n    paddingRight          :props.paddingRight             ? props.paddingRight                                              : 0,  \r\n    padding               :props.padding                  ? props.padding                                                   : 0,\r\n    justifyContent        :props.Xcenter||props.XYcenter  ? `center` :undefined   ,\r\n    alignItems            :props.Ycenter||props.XYcenter  ? `center` :undefined   ,\r\n    textAlign             :props.align                    ? props.align                                                     :\"left\"             ,\r\n    gridTemplateColumns   :props.columns                  ?  `repeat(${props.columns},1fr)`                                 :`repeat(19,1fr)`   ,\r\n    gridTemplateRows      :props.rows                     ?  `repeat(${props.rows},1fr)`                                    :`repeat(19,1fr)`   ,\r\n    direction             :props.rtl                      ? `rtl`                                                           :\"ltr\",   \r\n    gridColumn            :props.start&&props.end         ? `${ConvertPoint(props.start)[0]}/${ConvertPoint(props.end)[0]}` : undefined,\r\n    gridRow               :props.start&&props.end         ? `${ConvertPoint(props.start)[1]}/${ConvertPoint(props.end)[1]}` : undefined,\r\n    fontFamily            :props.family                   ? props.family                                                    : undefined,\r\n    fontSize              :props.fSize                    ? props.fSize                                                     : undefined,\r\n    textDecoration        :props.underline                ? \"underline\"                                                     : undefined,\r\n    flexDirection         :props.flexDirection            ? props.flexDirection                                             : undefined,\r\n    overflow              :props.scroll                   ? \"auto\"                                                          : undefined,\r\n    flexWrap              :props.wrap                     ? \"wrap\"                                                          : undefined,\r\n\r\n})\r\n\r\nexport default GlobalStyle;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}