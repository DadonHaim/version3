{"ast":null,"code":"var _jsxFileName = \"H:\\\\Project\\\\version3\\\\client\\\\src\\\\devComponent.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GridDebug(props) {\n  let styles = {\n    width: 50,\n    height: 50,\n    border: \"1px solid\",\n    position: \"absolute\",\n    top: 20,\n    left: 2\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"resultGrid\",\n    style: styles\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n}\n_c = GridDebug;\nfunction GridBtn({\n  ForClassName,\n  top\n}) {\n  _s();\n  let [count, setCount] = React.useState(0);\n  let styles = {\n    position: \"absolute\",\n    top: 20 * top,\n    right: 2\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles,\n      onClick: () => {\n        setCount(c => c + 1);\n      },\n      children: ForClassName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), count % 2 == 1 ? /*#__PURE__*/_jsxDEV(GDebug, {\n      ForClassName: ForClassName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }, this) : \"\"]\n  }, void 0, true);\n}\n_s(GridBtn, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c2 = GridBtn;\nfunction GDebug({\n  ForClassName\n}) {\n  _s2();\n  let [style, setStyle] = React.useState({});\n  React.useEffect(() => {\n    let styles = {\n      display: \"grid\",\n      border: \"0.2px solid\",\n      position: \"absolute\",\n      opacity: \"50%\"\n    };\n    setTimeout(() => {\n      let elem = document.getElementsByClassName(ForClassName)[0];\n      if (!elem) alert(\"class name no valid\");else {\n        styles[\"width\"] = elem.clientWidth;\n        styles[\"height\"] = elem.clientHeight;\n        styles[\"left\"] = elem.offsetLeft;\n        styles[\"top\"] = elem.offsetTop;\n        styles[\"gridTemplateRows\"] = elem.style.gridTemplateRows;\n        styles[\"gridTemplateColumns\"] = elem.style.gridTemplateColumns;\n        setStyle(styles);\n      }\n    }, 100);\n  }, []);\n  if (style) {\n    var _style$gridTemplateRo, _style$gridTemplateCo;\n    let rows = getNum((_style$gridTemplateRo = style.gridTemplateRows) === null || _style$gridTemplateRo === void 0 ? void 0 : _style$gridTemplateRo.toString());\n    let cols = getNum((_style$gridTemplateCo = style.gridTemplateColumns) === null || _style$gridTemplateCo === void 0 ? void 0 : _style$gridTemplateCo.toString());\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: new Array(rows).fill(1).map((i, indexI) => {\n        return new Array(cols).fill(1).map((j, indexJ) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: \"0.5px solid\"\n            },\n            onClick: () => {\n              let resElem = document.getElementById(\"resultGrid\");\n              if (!resElem) {\n                alert(\"noValid\");\n              } else {\n                resElem.innerHTML += `${indexJ + 1},${indexI + 1}\\n`;\n              }\n            }\n          }, `${indexI},${indexJ}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }, this);\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s2(GDebug, \"5jE13vQytP3S9PTF8njmM7pEDkY=\");\n_c3 = GDebug;\nfunction getNum(str) {\n  if (!str) return 0;\n  let _result = str.replace(\"repeat(\", \"\");\n  let result = Number.parseInt(_result.replace(\",1fr)\", \"\"));\n  if (Number.isInteger(result)) {\n    return result;\n  } else {\n    alert(\"gatNumError\");\n    return 0;\n  }\n}\nexport { GridDebug };\nexport { GridBtn };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GridDebug\");\n$RefreshReg$(_c2, \"GridBtn\");\n$RefreshReg$(_c3, \"GDebug\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","GridDebug","props","styles","width","height","border","position","top","left","id","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","GridBtn","ForClassName","_s","count","setCount","useState","right","children","onClick","c","GDebug","_c2","_s2","setStyle","useEffect","display","opacity","setTimeout","elem","document","getElementsByClassName","alert","clientWidth","clientHeight","offsetLeft","offsetTop","gridTemplateRows","gridTemplateColumns","_style$gridTemplateRo","_style$gridTemplateCo","rows","getNum","toString","cols","Array","fill","map","i","indexI","j","indexJ","resElem","getElementById","innerHTML","_c3","str","_result","replace","result","Number","parseInt","isInteger","$RefreshReg$"],"sources":["H:/Project/version3/client/src/devComponent.tsx"],"sourcesContent":["import React from \"react\"\r\nfunction GridDebug(props:any){\r\n    let styles:React.CSSProperties={\r\n        width:50,\r\n        height:50,\r\n        border:\"1px solid\",\r\n        position:\"absolute\",\r\n        top:20,\r\n        left:2,\r\n    }\r\n    return <div id=\"resultGrid\" style={styles} ></div>\r\n}\r\n\r\n\r\nfunction GridBtn({ForClassName,top}:any){\r\n    let [count, setCount] = React.useState<number>(0)\r\n    let styles :React.CSSProperties={\r\n        position:\"absolute\",\r\n        top:20*top,\r\n        right:2,\r\n    }\r\n    return(\r\n        <>\r\n            <button style={styles} onClick={()=>{\r\n                setCount(c=>c+1)\r\n            }}>{ForClassName}</button>\r\n\r\n            {count%2==1?<GDebug ForClassName={ForClassName}/>:\"\"}    \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction GDebug({ForClassName}:any){\r\n    let [style , setStyle] = React.useState<React.CSSProperties>({})\r\n    React.useEffect(()=>{\r\n        let styles :React.CSSProperties={\r\n            display:\"grid\",\r\n            border:\"0.2px solid\",\r\n            position:\"absolute\",\r\n            opacity:\"50%\",\r\n        };\r\n        setTimeout(()=>{\r\n            let elem :any= document.getElementsByClassName(ForClassName)[0]\r\n            if(!elem) alert(\"class name no valid\")\r\n            else{\r\n                styles[\"width\"] = elem.clientWidth;\r\n                styles[\"height\"] = elem.clientHeight;\r\n                styles[\"left\"] = elem.offsetLeft;\r\n                styles[\"top\"] = elem.offsetTop;\r\n                styles[\"gridTemplateRows\"] = elem.style.gridTemplateRows;\r\n                styles[\"gridTemplateColumns\"] = elem.style.gridTemplateColumns;\r\n                setStyle(styles)\r\n            }\r\n        },100)\r\n    },[])\r\n    if(style){\r\n        let rows = getNum(style.gridTemplateRows?.toString());\r\n        let cols = getNum(style.gridTemplateColumns?.toString()); \r\n        return(\r\n            <div style={style}>\r\n                {\r\n                    new Array<number>(rows).fill(1).map((i,indexI)=>{\r\n                        return new Array<number>(cols).fill(1).map((j,indexJ)=>{\r\n                            return  <div style={{border:\"0.5px solid\"}} onClick={()=>{\r\n                                let resElem = document.getElementById(\"resultGrid\");\r\n                                if(!resElem){\r\n                                    alert(\"noValid\")\r\n                                }\r\n                                else{\r\n                                    resElem.innerHTML += `${indexJ+1},${indexI+1}\\n`;\r\n                                }\r\n                            }} key={`${indexI},${indexJ}`}></div>\r\n                        })\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    else \r\n        return <></>\r\n}\r\n\r\n\r\nfunction getNum(str:string| undefined):number{\r\n    if(!str) return 0;\r\n    let _result = str.replace(\"repeat(\",\"\")\r\n    let result = Number.parseInt(_result.replace(\",1fr)\",\"\")) \r\n    if(Number.isInteger(result)){\r\n        return result;\r\n    }\r\n    else{\r\n        alert(\"gatNumError\");\r\n        return 0;\r\n    }\r\n}\r\nexport {GridDebug}\r\nexport {GridBtn}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}