{"ast":null,"code":"var _jsxFileName = \"H:\\\\Project\\\\version3\\\\client\\\\src\\\\Components\\\\Global\\\\Menu.tsx\",\n  _s = $RefreshSig$();\n// import { actions } from \"../../Store/Store\";\nimport { ConvertPoint, Flex, memo, useStore } from \"../../importAll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultStyle = {\n  backgroundColor: \"yellow\"\n};\nconst Menu = memo(_c = props => /*#__PURE__*/_jsxDEV(Flex, {\n  XYcenter: true,\n  ...props,\n  children: [\" \", props.children]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 40\n}, this));\n_c2 = Menu;\nconst Choice = _s(memo(_c3 = _s(props => {\n  _s();\n  let {\n    dispatch,\n    actions\n  } = useStore();\n  let selectedStyle = props.selected ? defaultStyle : props.onSelected ? props.onSelected : {};\n  ;\n  const styleButton = {\n    display: \"inline-flex\",\n    border: \"1px solid\",\n    cursor: \"pointer\",\n    width: props.width || \"20%\",\n    height: props.height || \"40%\",\n    gridColumn: `${ConvertPoint(props.start)[0]}/${ConvertPoint(props.end)[0]}`,\n    gridRow: `${ConvertPoint(props.start)[1]}/${ConvertPoint(props.end)[1]}`,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    ...selectedStyle\n  };\n  const onclick = () => {\n    if (props.toPage) dispatch(actions.setMainPage(props.toPage));\n    if (props.toSubPage) dispatch(actions.setSubPage(props.toSubPage));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styleButton,\n    onClick: onclick,\n    children: [\" \", props.value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n}, \"xSRMug6tpIYS5MCJOtY8o/J6d9U=\", false, function () {\n  return [useStore];\n})), \"xSRMug6tpIYS5MCJOtY8o/J6d9U=\", false, function () {\n  return [useStore];\n});\n_c4 = Choice;\nexport { Menu, Choice };\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Menu$memo\");\n$RefreshReg$(_c2, \"Menu\");\n$RefreshReg$(_c3, \"Choice$memo\");\n$RefreshReg$(_c4, \"Choice\");","map":{"version":3,"names":["ConvertPoint","Flex","memo","useStore","jsxDEV","_jsxDEV","defaultStyle","backgroundColor","Menu","_c","props","XYcenter","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Choice","_s","_c3","dispatch","actions","selectedStyle","selected","onSelected","styleButton","display","border","cursor","width","height","gridColumn","start","end","gridRow","justifyContent","alignItems","onclick","toPage","setMainPage","toSubPage","setSubPage","style","onClick","value","_c4","$RefreshReg$"],"sources":["H:/Project/version3/client/src/Components/Global/Menu.tsx"],"sourcesContent":["// import { actions } from \"../../Store/Store\";\r\nimport { ConvertPoint, Flex, memo,useDispatch, useStore } from \"../../importAll\";\r\nconst defaultStyle={backgroundColor:\"yellow\"}\r\nconst Menu = memo((props:IMenuProps)=> <Flex XYcenter {...props}> {props.children}</Flex>)\r\n\r\n\r\nconst Choice = memo((props:IChiceProps)=>{\r\n    let {dispatch ,actions} = useStore()\r\n\r\n    let selectedStyle = (props.selected)? defaultStyle : (props.onSelected)? props.onSelected: {}; ;\r\n  \r\n\r\n\r\n    const styleButton :React.CSSProperties={\r\n        display:\"inline-flex\",\r\n        border :\"1px solid\",\r\n        cursor:\"pointer\",\r\n        width: props.width || \"20%\",\r\n        height: props.height||\"40%\",\r\n        gridColumn:`${ConvertPoint(props.start)[0]}/${ConvertPoint(props.end)[0]}`,\r\n        gridRow : `${ConvertPoint(props.start)[1]}/${ConvertPoint(props.end)[1]}`,\r\n        justifyContent:\"center\",\r\n        alignItems:\"center\",\r\n        ...selectedStyle\r\n    }\r\n\r\n    const onclick = ()=>{\r\n        if(props.toPage)    dispatch(actions.setMainPage(props.toPage) );\r\n        if(props.toSubPage) dispatch(actions.setSubPage(props.toSubPage)  );\r\n    }\r\n\r\n    return <div style={styleButton} onClick={onclick}> {props.value}</div>\r\n})\r\n\r\n\r\n\r\n\r\ninterface IMenuProps extends IGlobalProps{\r\n    onSelected?:React.CSSProperties;\r\n}\r\ninterface IChiceProps extends IGlobalProps{\r\n    onSelected?:React.CSSProperties;\r\n    selected? : boolean;\r\n    toPage?:AllMainPages;\r\n    toSubPage?:AllSubPage;\r\n    value?:string;\r\n}\r\n\r\nexport{\r\n    Menu,\r\n    Choice\r\n}"],"mappings":";;AAAA;AACA,SAASA,YAAY,EAAEC,IAAI,EAAEC,IAAI,EAAcC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjF,MAAMC,YAAY,GAAC;EAACC,eAAe,EAAC;AAAQ,CAAC;AAC7C,MAAMC,IAAI,GAAGN,IAAI,CAAAO,EAAA,GAAEC,KAAgB,iBAAIL,OAAA,CAACJ,IAAI;EAACU,QAAQ;EAAA,GAAKD,KAAK;EAAAE,QAAA,GAAE,GAAC,EAACF,KAAK,CAACE,QAAQ;AAAA;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAO,CAAC,CAAC;AAAAC,GAAA,GAApFT,IAAI;AAGV,MAAMU,MAAM,GAAAC,EAAA,CAAGjB,IAAI,CAAAkB,GAAA,GAAAD,EAAA,CAAET,KAAiB,IAAG;EAAAS,EAAA;EACrC,IAAI;IAACE,QAAQ;IAAEC;EAAO,CAAC,GAAGnB,QAAQ,CAAC,CAAC;EAEpC,IAAIoB,aAAa,GAAIb,KAAK,CAACc,QAAQ,GAAGlB,YAAY,GAAII,KAAK,CAACe,UAAU,GAAGf,KAAK,CAACe,UAAU,GAAE,CAAC,CAAC;EAAE;EAI/F,MAAMC,WAAgC,GAAC;IACnCC,OAAO,EAAC,aAAa;IACrBC,MAAM,EAAE,WAAW;IACnBC,MAAM,EAAC,SAAS;IAChBC,KAAK,EAAEpB,KAAK,CAACoB,KAAK,IAAI,KAAK;IAC3BC,MAAM,EAAErB,KAAK,CAACqB,MAAM,IAAE,KAAK;IAC3BC,UAAU,EAAE,GAAEhC,YAAY,CAACU,KAAK,CAACuB,KAAK,CAAC,CAAC,CAAC,CAAE,IAAGjC,YAAY,CAACU,KAAK,CAACwB,GAAG,CAAC,CAAC,CAAC,CAAE,EAAC;IAC1EC,OAAO,EAAI,GAAEnC,YAAY,CAACU,KAAK,CAACuB,KAAK,CAAC,CAAC,CAAC,CAAE,IAAGjC,YAAY,CAACU,KAAK,CAACwB,GAAG,CAAC,CAAC,CAAC,CAAE,EAAC;IACzEE,cAAc,EAAC,QAAQ;IACvBC,UAAU,EAAC,QAAQ;IACnB,GAAGd;EACP,CAAC;EAED,MAAMe,OAAO,GAAGA,CAAA,KAAI;IAChB,IAAG5B,KAAK,CAAC6B,MAAM,EAAKlB,QAAQ,CAACC,OAAO,CAACkB,WAAW,CAAC9B,KAAK,CAAC6B,MAAM,CAAE,CAAC;IAChE,IAAG7B,KAAK,CAAC+B,SAAS,EAAEpB,QAAQ,CAACC,OAAO,CAACoB,UAAU,CAAChC,KAAK,CAAC+B,SAAS,CAAG,CAAC;EACvE,CAAC;EAED,oBAAOpC,OAAA;IAAKsC,KAAK,EAAEjB,WAAY;IAACkB,OAAO,EAAEN,OAAQ;IAAA1B,QAAA,GAAC,GAAC,EAACF,KAAK,CAACmC,KAAK;EAAA;IAAAhC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC1E,CAAC;EAAA,QAzB6Bb,QAAQ;AAAA,EAyBrC,CAAC;EAAA,QAzB4BA,QAAQ;AAAA,EAyBpC;AAAA2C,GAAA,GA1BI5B,MAAM;AA0CZ,SACIV,IAAI,EACJU,MAAM;AACT,IAAAT,EAAA,EAAAQ,GAAA,EAAAG,GAAA,EAAA0B,GAAA;AAAAC,YAAA,CAAAtC,EAAA;AAAAsC,YAAA,CAAA9B,GAAA;AAAA8B,YAAA,CAAA3B,GAAA;AAAA2B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}