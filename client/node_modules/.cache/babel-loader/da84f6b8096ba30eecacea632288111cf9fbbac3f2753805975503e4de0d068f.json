{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useSelector } from \"../../importAll\";\n// import { GetGirlImg } from \"../../../../Images/Images\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Inventory(props) {\n  _s();\n  let settings = useSelector(store => store.settings);\n  let activeAvatar = useSelector(store => store.activeAvatar);\n  const AVATAR_VIEW_GRID = settings.AVATAR_VIEW_GRID;\n  const AVATAR_BODY_POSITION = activeAvatar.gender == \"girl\" ? settings.GIRL_AVATAR_BODY_POSITION : settings.BOY_AVATAR_BODY_POSITION;\n  const SHIRT_POSITION = activeAvatar.gender == \"girl\" ? settings.GIRL_SHIRT_POSITION : settings.BOY_SHIRT_POSITION;\n  const SHOES_POSITION = activeAvatar.gender == \"girl\" ? settings.GIRL_SHOES_POSITION : settings.BOY_SHOES_POSITION;\n  const PANTS_POSITION = activeAvatar.gender == \"girl\" ? settings.GIRL_PANTS_POSITION : settings.BOY_PANTS_POSITION;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Inventory, \"os7uqsZ/JKB7rbz+FvgdbP7I9o4=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Inventory;\nexport default Inventory;\n\n// const girl  = GetGirlImg('girlAvatar')\n// const shirt = GetGirlImg('shirt/shirt4')\n// const shoes = GetGirlImg('/shoes1')\n// const pants = GetGirlImg('/pants1')\n\n// const AvatarCreatorView = memo((props:IAvatarCreatorViewProps)=>{\n\n//     \n//     \n//     \n//     \n//     \n\n//     return(\n//         <Grid  grid=\"30,30\" {...props} >\n//             <Name  fSize=\"150%\" position=\"1,2|30,4\">{props.name||\"avatar name\"}</Name>\n//             <Grid className=\"view\" grid={AVATAR_VIEW_GRID} position=\"1,6|30,30\" >\n//                 <Avatar src={girl}  zIndex={1} position={AVATAR_BODY_POSITION} />\n//                 <Cloth  src={shirt} zIndex={3} position={SHIRT_POSITION } />\n//                 <Cloth  src={shoes} zIndex={4} position={SHOES_POSITION } />\n//                 <Cloth  src={pants} zIndex={2} position={PANTS_POSITION} />\n//             </Grid>\n//         </Grid>\n//     )\n// })\n\n// interface IAvatarCreatorViewProps extends IGlobalProps{\n//     gender : \"boy\"|\"girl\";\n//     name? : \"string\";\n// }\n\n// export  AvatarCreatorView\n\n// const CreateAvatarInventory = memo((props:ICreateAvatarInventoryProps)=>{\n//     let [category , setCategory] = useState<any>(\"hat\")\n\n//     return(\n//         <>\n//             <Grid rows={1} cols={5}>\n//                 <Name onClick={()=>{setCategory(\"hat\")}}>כובע</Name>\n//                 <Name onClick={()=>{setCategory(\"\")}}>חולצה</Name>\n//                 <Name onClick={()=>{setCategory(\"\")}}>מכנסיים</Name>\n//                 <Name onClick={()=>{setCategory(\"\")}}>נעליים</Name>\n//             </Grid>\n\n//             <Grid rows={5} cols={5}>\n//                 {\n//                     props.items.map(item=>{\n//                         if(item.categoryItem !== category) return <></>\n//                         return (\n//                             <Div>\n//                                 <Name>{item.name}</Name>\n//                             </Div>\n//                         )\n\n//                     })\n//                 }\n//             </Grid>\n//         </>\n//     )\n// })\n\n// interface ICreateAvatarInventoryProps extends IGlobalProps{\n//     items : ItemClient[];\n// }\n\n// export  CreateAvatarInventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["useSelector","Fragment","_Fragment","jsxDEV","_jsxDEV","Inventory","props","_s","settings","store","activeAvatar","AVATAR_VIEW_GRID","AVATAR_BODY_POSITION","gender","GIRL_AVATAR_BODY_POSITION","BOY_AVATAR_BODY_POSITION","SHIRT_POSITION","GIRL_SHIRT_POSITION","BOY_SHIRT_POSITION","SHOES_POSITION","GIRL_SHOES_POSITION","BOY_SHOES_POSITION","PANTS_POSITION","GIRL_PANTS_POSITION","BOY_PANTS_POSITION","_c","$RefreshReg$"],"sources":["H:/Project/version3/client/src/Components/Game/Inventory.tsx"],"sourcesContent":["import {Avatar,Grid,Name, memo, useSelector ,Cloth, AvatarClient} from \"../../importAll\";\r\n// import { GetGirlImg } from \"../../../../Images/Images\";\r\n\r\nfunction Inventory(props: IInventoryProps){\r\n\r\n    let settings      = useSelector<IStore,ISettings>(store=>store.settings)\r\n    let activeAvatar  = useSelector<IStore,AvatarClient>(store=>store.activeAvatar);\r\n    \r\n    const AVATAR_VIEW_GRID      = settings.AVATAR_VIEW_GRID;\r\n    const AVATAR_BODY_POSITION  = activeAvatar.gender==\"girl\"? settings.GIRL_AVATAR_BODY_POSITION   : settings.BOY_AVATAR_BODY_POSITION ;\r\n    const SHIRT_POSITION        = activeAvatar.gender==\"girl\"? settings.GIRL_SHIRT_POSITION         : settings.BOY_SHIRT_POSITION       ;\r\n    const SHOES_POSITION        = activeAvatar.gender==\"girl\"? settings.GIRL_SHOES_POSITION         : settings.BOY_SHOES_POSITION       ;\r\n    const PANTS_POSITION        = activeAvatar.gender==\"girl\"? settings.GIRL_PANTS_POSITION         : settings.BOY_PANTS_POSITION       ;\r\n\r\n    return(\r\n        <></>\r\n    )\r\n\r\n}\r\n\r\ninterface IInventoryProps extends IGlobalProps{\r\n    items : typeof ItemClient;\r\n}\r\nexport default Inventory;\r\n\r\n// const girl  = GetGirlImg('girlAvatar')\r\n// const shirt = GetGirlImg('shirt/shirt4')\r\n// const shoes = GetGirlImg('/shoes1')\r\n// const pants = GetGirlImg('/pants1')\r\n\r\n\r\n\r\n\r\n\r\n// const AvatarCreatorView = memo((props:IAvatarCreatorViewProps)=>{\r\n\r\n//     \r\n//     \r\n//     \r\n//     \r\n//     \r\n    \r\n//     return(\r\n//         <Grid  grid=\"30,30\" {...props} >\r\n//             <Name  fSize=\"150%\" position=\"1,2|30,4\">{props.name||\"avatar name\"}</Name>\r\n//             <Grid className=\"view\" grid={AVATAR_VIEW_GRID} position=\"1,6|30,30\" >\r\n//                 <Avatar src={girl}  zIndex={1} position={AVATAR_BODY_POSITION} />\r\n//                 <Cloth  src={shirt} zIndex={3} position={SHIRT_POSITION } />\r\n//                 <Cloth  src={shoes} zIndex={4} position={SHOES_POSITION } />\r\n//                 <Cloth  src={pants} zIndex={2} position={PANTS_POSITION} />\r\n//             </Grid>\r\n//         </Grid>\r\n//     )\r\n// })\r\n\r\n\r\n// interface IAvatarCreatorViewProps extends IGlobalProps{\r\n//     gender : \"boy\"|\"girl\";\r\n//     name? : \"string\";\r\n// }\r\n\r\n// export  AvatarCreatorView\r\n\r\n\r\n\r\n// const CreateAvatarInventory = memo((props:ICreateAvatarInventoryProps)=>{\r\n//     let [category , setCategory] = useState<any>(\"hat\")\r\n\r\n\r\n//     return(\r\n//         <>\r\n//             <Grid rows={1} cols={5}>\r\n//                 <Name onClick={()=>{setCategory(\"hat\")}}>כובע</Name>\r\n//                 <Name onClick={()=>{setCategory(\"\")}}>חולצה</Name>\r\n//                 <Name onClick={()=>{setCategory(\"\")}}>מכנסיים</Name>\r\n//                 <Name onClick={()=>{setCategory(\"\")}}>נעליים</Name>\r\n//             </Grid>\r\n\r\n//             <Grid rows={5} cols={5}>\r\n//                 {\r\n//                     props.items.map(item=>{\r\n//                         if(item.categoryItem !== category) return <></>\r\n//                         return (\r\n//                             <Div>\r\n//                                 <Name>{item.name}</Name>\r\n//                             </Div>\r\n//                         )\r\n                        \r\n//                     })\r\n//                 }\r\n//             </Grid>\r\n//         </>\r\n//     )\r\n// })\r\n\r\n\r\n// interface ICreateAvatarInventoryProps extends IGlobalProps{\r\n//     items : ItemClient[];\r\n// }\r\n\r\n// export  CreateAvatarInventory;"],"mappings":";AAAA,SAAgCA,WAAW,QAA4B,iBAAiB;AACxF;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,SAASA,CAACC,KAAsB,EAAC;EAAAC,EAAA;EAEtC,IAAIC,QAAQ,GAAQR,WAAW,CAAmBS,KAAK,IAAEA,KAAK,CAACD,QAAQ,CAAC;EACxE,IAAIE,YAAY,GAAIV,WAAW,CAAsBS,KAAK,IAAEA,KAAK,CAACC,YAAY,CAAC;EAE/E,MAAMC,gBAAgB,GAAQH,QAAQ,CAACG,gBAAgB;EACvD,MAAMC,oBAAoB,GAAIF,YAAY,CAACG,MAAM,IAAE,MAAM,GAAEL,QAAQ,CAACM,yBAAyB,GAAKN,QAAQ,CAACO,wBAAwB;EACnI,MAAMC,cAAc,GAAUN,YAAY,CAACG,MAAM,IAAE,MAAM,GAAEL,QAAQ,CAACS,mBAAmB,GAAWT,QAAQ,CAACU,kBAAkB;EAC7H,MAAMC,cAAc,GAAUT,YAAY,CAACG,MAAM,IAAE,MAAM,GAAEL,QAAQ,CAACY,mBAAmB,GAAWZ,QAAQ,CAACa,kBAAkB;EAC7H,MAAMC,cAAc,GAAUZ,YAAY,CAACG,MAAM,IAAE,MAAM,GAAEL,QAAQ,CAACe,mBAAmB,GAAWf,QAAQ,CAACgB,kBAAkB;EAE7H,oBACIpB,OAAA,CAAAF,SAAA,mBAAI,CAAC;AAGb;AAACK,EAAA,CAfQF,SAAS;EAAA,QAEML,WAAW,EACXA,WAAW;AAAA;AAAAyB,EAAA,GAH1BpB,SAAS;AAoBlB,eAAeA,SAAS;;AAExB;AACA;AACA;AACA;;AAMA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}