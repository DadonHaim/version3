{"ast":null,"code":"import { socket, UserClient } from \"../importAll\";\nexport function Start_With_Token(store) {\n  let token = sessionStorage.getItem(\"token\");\n  if (token) socket.emit(\"Start-With-Token\", token);\n  socket.on(\"Start-Token-Valid\", user => {\n    store.dispatch(store.actions.setIsLogin(true));\n    store.dispatch(store.actions.setUser(user));\n  });\n}\n_c = Start_With_Token;\nexport function Force_Logout(store) {\n  socket.on(\"ForceLogout\", msg => {\n    UserClient.KillToken();\n    store.dispatch(store.actions.setIsLogin(false));\n    store.dispatch(store.actions.setUser({}));\n    store.dispatch(store.actions.setMainPage(\"Guest\"));\n    alert(msg);\n  });\n}\n_c2 = Force_Logout;\nexport function Login_Me(store, send, setMsg) {\n  socket.emit('Login-Me', send);\n  socket.on(\"Login-You-Are-Already\", msgs => setMsg(msgs));\n  socket.on(\"Login-No-Valid\", msgs => setMsg(msgs));\n  socket.on(\"Login-You\", user => {\n    UserClient.CreateToken(user.token);\n    store.dispatch(store.actions.setIsLogin(true));\n    store.dispatch(store.actions.setUser(user));\n    store.dispatch(store.actions.setMainPage(\"Game\"));\n    setMsg({\n      status: \"Valid\"\n    });\n  });\n}\n_c3 = Login_Me;\nexport function Register_Me(store, send, setMsg) {\n  socket.emit(\"Register-Me\", send);\n  socket.on(\"Register-Not-Valid\", msgs => setMsg(msgs));\n  socket.on(\"Register-You\", msgs => setMsg(msgs));\n}\n_c4 = Register_Me;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Start_With_Token\");\n$RefreshReg$(_c2, \"Force_Logout\");\n$RefreshReg$(_c3, \"Login_Me\");\n$RefreshReg$(_c4, \"Register_Me\");","map":{"version":3,"names":["socket","UserClient","Start_With_Token","store","token","sessionStorage","getItem","emit","on","user","dispatch","actions","setIsLogin","setUser","_c","Force_Logout","msg","KillToken","setMainPage","alert","_c2","Login_Me","send","setMsg","msgs","CreateToken","status","_c3","Register_Me","_c4","$RefreshReg$"],"sources":["H:/Project/version3/client/src/Socket/UserSocket.tsx"],"sourcesContent":["import { socket ,UserClient} from \"../importAll\";\r\n\r\nexport function Start_With_Token(store:any){\r\n    let token = sessionStorage.getItem(\"token\");\r\n    if(token) \r\n        socket.emit<string>(\"Start-With-Token\",token)\r\n    socket.on<UserClient>(\"Start-Token-Valid\",(user)=>{\r\n        store.dispatch(store.actions.setIsLogin(true));\r\n        store.dispatch(store.actions.setUser(user));\r\n    })\r\n}\r\n\r\n\r\nexport function Force_Logout(store:any){\r\n    socket.on(\"ForceLogout\",(msg)=>{\r\n        UserClient.KillToken();\r\n        store.dispatch(store.actions.setIsLogin(false));\r\n        store.dispatch(store.actions.setUser({}));\r\n        store.dispatch(store.actions.setMainPage(\"Guest\"));\r\n        alert(msg);\r\n    })\r\n}\r\n\r\n\r\nexport function Login_Me(store:any , send:ILogin , setMsg:any){\r\n    socket.emit <ILogin>     ('Login-Me'               , send)\r\n    socket.on   <ILoginMsgs> (\"Login-You-Are-Already\"  , (msgs:ILoginMsgs) =>  setMsg(msgs))\r\n    socket.on   <ILoginMsgs> (\"Login-No-Valid\"         , (msgs:ILoginMsgs) =>  setMsg(msgs))\r\n    socket.on   <UserClient> (\"Login-You\"              , (user:UserClient) =>  {\r\n        UserClient.CreateToken(user.token)\r\n        store.dispatch(store.actions.setIsLogin(true))\r\n        store.dispatch(store.actions.setUser(user))\r\n        store.dispatch(store.actions.setMainPage(\"Game\"))\r\n        setMsg({status:\"Valid\"})\r\n    })\r\n}\r\n\r\nexport function Register_Me(store:any,send:IRegister,setMsg:any){\r\n    socket.emit <IRegister>     (\"Register-Me\"        ,send);\r\n    socket.on   <IRegisterMsgs> (\"Register-Not-Valid\" ,(msgs:IRegisterMsgs)=>setMsg(msgs))\r\n    socket.on   <IRegisterMsgs> (\"Register-You\"       ,(msgs:IRegisterMsgs)=>setMsg(msgs)) \r\n}\r\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,UAAU,QAAO,cAAc;AAEhD,OAAO,SAASC,gBAAgBA,CAACC,KAAS,EAAC;EACvC,IAAIC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAGF,KAAK,EACJJ,MAAM,CAACO,IAAI,CAAS,kBAAkB,EAACH,KAAK,CAAC;EACjDJ,MAAM,CAACQ,EAAE,CAAa,mBAAmB,EAAEC,IAAI,IAAG;IAC9CN,KAAK,CAACO,QAAQ,CAACP,KAAK,CAACQ,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC9CT,KAAK,CAACO,QAAQ,CAACP,KAAK,CAACQ,OAAO,CAACE,OAAO,CAACJ,IAAI,CAAC,CAAC;EAC/C,CAAC,CAAC;AACN;AAACK,EAAA,GAReZ,gBAAgB;AAWhC,OAAO,SAASa,YAAYA,CAACZ,KAAS,EAAC;EACnCH,MAAM,CAACQ,EAAE,CAAC,aAAa,EAAEQ,GAAG,IAAG;IAC3Bf,UAAU,CAACgB,SAAS,CAAC,CAAC;IACtBd,KAAK,CAACO,QAAQ,CAACP,KAAK,CAACQ,OAAO,CAACC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC/CT,KAAK,CAACO,QAAQ,CAACP,KAAK,CAACQ,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACzCV,KAAK,CAACO,QAAQ,CAACP,KAAK,CAACQ,OAAO,CAACO,WAAW,CAAC,OAAO,CAAC,CAAC;IAClDC,KAAK,CAACH,GAAG,CAAC;EACd,CAAC,CAAC;AACN;AAACI,GAAA,GAReL,YAAY;AAW5B,OAAO,SAASM,QAAQA,CAAClB,KAAS,EAAGmB,IAAW,EAAGC,MAAU,EAAC;EAC1DvB,MAAM,CAACO,IAAI,CAAe,UAAU,EAAiBe,IAAI,CAAC;EAC1DtB,MAAM,CAACQ,EAAE,CAAiB,uBAAuB,EAAKgB,IAAe,IAAMD,MAAM,CAACC,IAAI,CAAC,CAAC;EACxFxB,MAAM,CAACQ,EAAE,CAAiB,gBAAgB,EAAYgB,IAAe,IAAMD,MAAM,CAACC,IAAI,CAAC,CAAC;EACxFxB,MAAM,CAACQ,EAAE,CAAiB,WAAW,EAAiBC,IAAe,IAAM;IACvER,UAAU,CAACwB,WAAW,CAAChB,IAAI,CAACL,KAAK,CAAC;IAClCD,KAAK,CAACO,QAAQ,CAACP,KAAK,CAACQ,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC9CT,KAAK,CAACO,QAAQ,CAACP,KAAK,CAACQ,OAAO,CAACE,OAAO,CAACJ,IAAI,CAAC,CAAC;IAC3CN,KAAK,CAACO,QAAQ,CAACP,KAAK,CAACQ,OAAO,CAACO,WAAW,CAAC,MAAM,CAAC,CAAC;IACjDK,MAAM,CAAC;MAACG,MAAM,EAAC;IAAO,CAAC,CAAC;EAC5B,CAAC,CAAC;AACN;AAACC,GAAA,GAXeN,QAAQ;AAaxB,OAAO,SAASO,WAAWA,CAACzB,KAAS,EAACmB,IAAc,EAACC,MAAU,EAAC;EAC5DvB,MAAM,CAACO,IAAI,CAAkB,aAAa,EAASe,IAAI,CAAC;EACxDtB,MAAM,CAACQ,EAAE,CAAoB,oBAAoB,EAAGgB,IAAkB,IAAGD,MAAM,CAACC,IAAI,CAAC,CAAC;EACtFxB,MAAM,CAACQ,EAAE,CAAoB,cAAc,EAASgB,IAAkB,IAAGD,MAAM,CAACC,IAAI,CAAC,CAAC;AAC1F;AAACK,GAAA,GAJeD,WAAW;AAAA,IAAAd,EAAA,EAAAM,GAAA,EAAAO,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAV,GAAA;AAAAU,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}