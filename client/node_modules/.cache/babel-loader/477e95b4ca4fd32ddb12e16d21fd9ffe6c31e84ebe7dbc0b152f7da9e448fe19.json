{"ast":null,"code":"var _jsxFileName = \"H:\\\\Project\\\\version3\\\\client\\\\src\\\\devComponent.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { useEffectV2 } from \"./importAll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GridDebug(props) {\n  let styles = {\n    width: 50,\n    height: 50,\n    border: \"1px solid\",\n    position: \"absolute\",\n    top: 20,\n    left: 2\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"resultGrid\",\n      style: styles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"displayElem\",\n      style: {\n        ...styles,\n        top: 90\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = GridDebug;\nfunction GridBtn({\n  ForClassName,\n  top\n}) {\n  _s();\n  let [colorbtn, setColorBtn] = React.useState(\"gray\");\n  let [count, setCount] = React.useState(0);\n  let [rows, setRows] = React.useState(0);\n  let [cols, setCols] = React.useState(0);\n  useEffectV2(\"Devtemp\", () => {\n    if (count % 2 == 1) setColorBtn(\"black\");else setColorBtn(\"gray\");\n  });\n  let styles = {\n    position: \"absolute\",\n    top: 20 * top,\n    right: 2,\n    backgroundColor: colorbtn\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles,\n      onClick: () => {\n        let elem = document.getElementsByClassName(ForClassName)[0];\n        if (!elem) alert(\"class name no valid\");else {\n          var _elem$style$gridTempl, _elem$style$gridTempl2;\n          let r = getNum((_elem$style$gridTempl = elem.style.gridTemplateRows) === null || _elem$style$gridTempl === void 0 ? void 0 : _elem$style$gridTempl.toString());\n          ;\n          let c = getNum((_elem$style$gridTempl2 = elem.style.gridTemplateColumns) === null || _elem$style$gridTempl2 === void 0 ? void 0 : _elem$style$gridTempl2.toString());\n          ;\n          setRows(r);\n          setCols(c);\n          setCount(co => co + 1);\n        }\n      },\n      children: ForClassName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), count % 2 == 1 ? /*#__PURE__*/_jsxDEV(GDebug, {\n      rows: rows,\n      cols: cols,\n      ForClassName: ForClassName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }, this) : \"\"]\n  }, void 0, true);\n}\n_s(GridBtn, \"VoKnVLIcOl2/GONQyx4Xc/iAchg=\", false, function () {\n  return [useEffectV2];\n});\n_c2 = GridBtn;\nfunction GDebug({\n  ForClassName,\n  rows,\n  cols\n}) {\n  _s2();\n  let [style, setStyle] = React.useState();\n  React.useEffect(() => {\n    let styles = {\n      display: \"grid\",\n      border: \"0.2px solid\",\n      position: \"absolute\",\n      backgroundColor: \"azure\",\n      opacity: \"40%\"\n    };\n    setTimeout(() => {\n      let elem = document.getElementsByClassName(ForClassName)[0];\n      if (!elem) alert(\"class name no valid\");else {\n        styles[\"width\"] = elem.clientWidth;\n        styles[\"height\"] = elem.clientHeight;\n        styles[\"left\"] = elem.offsetLeft;\n        styles[\"top\"] = elem.offsetTop;\n        styles[\"gridTemplateRows\"] = elem.style.gridTemplateRows;\n        styles[\"gridTemplateColumns\"] = elem.style.gridTemplateColumns;\n        rows = rows;\n        cols = cols;\n        setStyle(styles);\n      }\n    }, 100);\n  }, []);\n  if (style) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style,\n    children: new Array(rows).fill(1).map((i, indexI) => {\n      return new Array(cols).fill(1).map((j, indexJ) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            let resElem = document.getElementById(\"resultGrid\");\n            if (!resElem) alert(\"noValid\");else resElem.innerHTML += `${indexJ + 1},${indexI + 1}\\n`;\n          },\n          onMouseOver: () => {\n            let disElem = document.getElementById(\"displayElem\");\n            if (!disElem) alert(\"noValid\");else disElem.innerHTML = `${indexJ + 1},${indexI + 1}`;\n          }\n        }, `${indexI},${indexJ}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this);\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);else return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s2(GDebug, \"sH3LIH2LPymcOS3x1wMdJSX9+mw=\");\n_c3 = GDebug;\nfunction getNum(str) {\n  if (!str) return 0;\n  let _result = str.replace(\"repeat(\", \"\");\n  let result = Number.parseInt(_result.replace(\",1fr)\", \"\"));\n  if (Number.isInteger(result)) {\n    console.log(result);\n    return result;\n  } else {\n    alert(\"gatNumError\");\n    return 0;\n  }\n}\nexport { GridDebug };\nexport { GridBtn };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GridDebug\");\n$RefreshReg$(_c2, \"GridBtn\");\n$RefreshReg$(_c3, \"GDebug\");","map":{"version":3,"names":["React","useEffectV2","jsxDEV","_jsxDEV","Fragment","_Fragment","GridDebug","props","styles","width","height","border","position","top","left","children","id","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","GridBtn","ForClassName","_s","colorbtn","setColorBtn","useState","count","setCount","rows","setRows","cols","setCols","right","backgroundColor","onClick","elem","document","getElementsByClassName","alert","_elem$style$gridTempl","_elem$style$gridTempl2","r","getNum","gridTemplateRows","toString","c","gridTemplateColumns","co","GDebug","_c2","_s2","setStyle","useEffect","display","opacity","setTimeout","clientWidth","clientHeight","offsetLeft","offsetTop","Array","fill","map","i","indexI","j","indexJ","resElem","getElementById","innerHTML","onMouseOver","disElem","_c3","str","_result","replace","result","Number","parseInt","isInteger","console","log","$RefreshReg$"],"sources":["H:/Project/version3/client/src/devComponent.tsx"],"sourcesContent":["import React, { useEffect } from \"react\"\r\nimport { useEffectV2 } from \"./importAll\"\r\nfunction GridDebug(props:any){\r\n    let styles:React.CSSProperties={\r\n        width:50,\r\n        height:50,\r\n        border:\"1px solid\",\r\n        position:\"absolute\",\r\n        top:20,\r\n        left:2,\r\n    }\r\n    return(\r\n        <>\r\n            <div id=\"resultGrid\" style={styles} ></div>\r\n            <div id=\"displayElem\" style={{...styles,top:90}} ></div>\r\n        </>\r\n    ) \r\n}\r\n\r\n\r\nfunction GridBtn({ForClassName,top}:any){\r\n    let [colorbtn , setColorBtn] = React.useState<string>(\"gray\")\r\n    let [count, setCount] = React.useState<number>(0)\r\n    let [rows, setRows] = React.useState<number>(0)\r\n    let [cols, setCols] = React.useState<number>(0)\r\n    \r\n    useEffectV2(\"Devtemp\",()=>{\r\n        if(count%2==1)\r\n            setColorBtn(\"black\")\r\n        else\r\n            setColorBtn(\"gray\")\r\n    })\r\n\r\n    let styles :React.CSSProperties={\r\n        position:\"absolute\",\r\n        top:20*top,\r\n        right:2,\r\n        backgroundColor:colorbtn,\r\n    }\r\n    return(\r\n        <>\r\n            <button style={styles} onClick={()=>{\r\n                let elem :any= document.getElementsByClassName(ForClassName)[0]\r\n                if(!elem) alert(\"class name no valid\")\r\n                else{\r\n                    let r = getNum(elem.style.gridTemplateRows?.toString());;\r\n                    let c = getNum(elem.style.gridTemplateColumns?.toString()); ;\r\n                    setRows(r)\r\n                    setCols(c)\r\n                    setCount(co=>co+1)\r\n                }\r\n            }}>{ForClassName}</button>\r\n\r\n            {count%2==1?<GDebug rows={rows} cols={cols} ForClassName={ForClassName}/>:\"\"}    \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction GDebug({ForClassName,rows,cols}:any){\r\n    let [style , setStyle] = React.useState<React.CSSProperties>()\r\n    React.useEffect(()=>{\r\n        let styles :React.CSSProperties={\r\n            display:\"grid\",\r\n            border:\"0.2px solid\",\r\n            position:\"absolute\",\r\n            backgroundColor:\"azure\",\r\n            opacity:\"40%\",\r\n        };\r\n        setTimeout(()=>{\r\n            let elem :any= document.getElementsByClassName(ForClassName)[0]\r\n            if(!elem) alert(\"class name no valid\")\r\n            else{\r\n                styles[\"width\"] = elem.clientWidth;\r\n                styles[\"height\"] = elem.clientHeight;\r\n                styles[\"left\"] = elem.offsetLeft;\r\n                styles[\"top\"] = elem.offsetTop;\r\n                styles[\"gridTemplateRows\"] = elem.style.gridTemplateRows;\r\n                styles[\"gridTemplateColumns\"] = elem.style.gridTemplateColumns;\r\n                rows = rows;\r\n                cols = cols;\r\n                setStyle(styles)\r\n            }\r\n     },100)\r\n},[])\r\n\r\nif(style)\r\n    return(\r\n        <div style={style}>\r\n            {\r\n                new Array<number>(rows).fill(1).map((i,indexI)=>{\r\n                    return new Array<number>(cols).fill(1).map((j,indexJ)=>{\r\n                        return(\r\n                            <div\r\n                                onClick={()=>{\r\n                                    let resElem = document.getElementById(\"resultGrid\");\r\n                                    if(!resElem)\r\n                                        alert(\"noValid\")\r\n                                    else\r\n                                        resElem.innerHTML += `${indexJ+1},${indexI+1}\\n`;\r\n                                        \r\n                                }}\r\n                                onMouseOver={()=>{\r\n                                    let disElem = document.getElementById(\"displayElem\");\r\n                                    if(!disElem)\r\n                                        alert(\"noValid\")\r\n                                    else\r\n                                        disElem.innerHTML = `${indexJ+1},${indexI+1}`;\r\n                                }}\r\n                                key={`${indexI},${indexJ}`}\r\n                            ></div>\r\n                        )\r\n                    })\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n    else \r\n        return <></>\r\n}\r\n\r\n\r\nfunction getNum(str:string| undefined):number{\r\n    if(!str) return 0;\r\n    let _result = str.replace(\"repeat(\",\"\")\r\n    let result = Number.parseInt(_result.replace(\",1fr)\",\"\")) \r\n    if(Number.isInteger(result)){\r\n        console.log(result);\r\n        return result;\r\n    }\r\n    else{\r\n        alert(\"gatNumError\");\r\n        return 0;\r\n    }\r\n}\r\nexport {GridDebug}\r\nexport {GridBtn}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}