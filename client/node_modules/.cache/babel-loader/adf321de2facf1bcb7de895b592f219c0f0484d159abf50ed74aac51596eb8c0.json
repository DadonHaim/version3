{"ast":null,"code":"var _jsxFileName = \"H:\\\\Project\\\\version3\\\\client\\\\src\\\\Components\\\\Game\\\\comps\\\\AvatarSelector.tsx\";\nimport { Button, Div, Grid, Lable, memo } from \"../../../importAll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvatarSelector = memo(_c = props => {\n  // let avatarName      = useSelector<IStore,string>(store=>store.avatarName);\n  // let hp              = useSelector<IStore,number>(store=>store.avatarHp);\n  // let damage          = useSelector<IStore,number>(store=>store.avatarDamage);\n  // let energy          = useSelector<IStore,number>(store=>store.avatarEnergy);\n  // let refillEnergy    = useSelector<IStore,number>(store=>store.avatarRefillEnergy);\n  // let silver          = useSelector<IStore,number>(store=>store.avatarSilver);\n  // let gold            = useSelector<IStore,number>(store=>store.avatarGold);\n  // let redPowder       = useSelector<IStore,number>(store=>store.avatarRedPowder);\n  // let diamond         = useSelector<IStore,number>(store=>store.avatarDiamond);\n\n  const deleteAvatar = () => {};\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: \"avatarSelector\",\n    ...props,\n    rows: 15,\n    columns: 15,\n    width: \"95%\",\n    height: \"15%\",\n    margin: \"10px auto\",\n    children: [/*#__PURE__*/_jsxDEV(Lable, {\n      bgColor: true,\n      className: \"avatarName\",\n      XYcenter: true,\n      start: \"7,1\",\n      end: \"11,5\",\n      rtl: true,\n      children: props.avatar.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Div, {\n      Empty: true,\n      className: \"Controll\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: deleteAvatar,\n        start: \"1,1\",\n        end: \"1,15\",\n        bgColor: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n});\n_c2 = AvatarSelector;\nexport default AvatarSelector;\nvar _c, _c2;\n$RefreshReg$(_c, \"AvatarSelector$memo\");\n$RefreshReg$(_c2, \"AvatarSelector\");","map":{"version":3,"names":["Button","Div","Grid","Lable","memo","jsxDEV","_jsxDEV","AvatarSelector","_c","props","deleteAvatar","className","rows","columns","width","height","margin","children","bgColor","XYcenter","start","end","rtl","avatar","name","fileName","_jsxFileName","lineNumber","columnNumber","Empty","onClick","_c2","$RefreshReg$"],"sources":["H:/Project/version3/client/src/Components/Game/comps/AvatarSelector.tsx"],"sourcesContent":["import { GridBtn } from \"../../../devComponent\";\r\nimport {AvatarClient, Button, Div, Flex, Grid, Lable, memo, useSelector} from \"../../../importAll\";\r\n\r\nconst AvatarSelector = memo((props:IAvatarSelectorProps)=>{\r\n    // let avatarName      = useSelector<IStore,string>(store=>store.avatarName);\r\n    // let hp              = useSelector<IStore,number>(store=>store.avatarHp);\r\n    // let damage          = useSelector<IStore,number>(store=>store.avatarDamage);\r\n    // let energy          = useSelector<IStore,number>(store=>store.avatarEnergy);\r\n    // let refillEnergy    = useSelector<IStore,number>(store=>store.avatarRefillEnergy);\r\n    // let silver          = useSelector<IStore,number>(store=>store.avatarSilver);\r\n    // let gold            = useSelector<IStore,number>(store=>store.avatarGold);\r\n    // let redPowder       = useSelector<IStore,number>(store=>store.avatarRedPowder);\r\n    // let diamond         = useSelector<IStore,number>(store=>store.avatarDiamond);\r\n    \r\n    const deleteAvatar = ()=>{}\r\n\r\n    return (\r\n        <Grid className=\"avatarSelector\" {...props} rows={15} columns={15} width=\"95%\" height=\"15%\" margin=\"10px auto\" >\r\n            <Lable bgColor className=\"avatarName\" XYcenter start=\"7,1\" end=\"11,5\" rtl>{props.avatar.name}</Lable>\r\n\r\n            <Div Empty className=\"Controll\">\r\n                <Button onClick={deleteAvatar} start=\"1,1\" end=\"1,15\" bgColor=\"red\"/>\r\n            </Div>\r\n        </Grid>\r\n    )\r\n})\r\n\r\ninterface IAvatarSelectorProps extends IGlobalProps{\r\n    avatar:AvatarClient; \r\n}\r\nexport default AvatarSelector;"],"mappings":";AACA,SAAsBA,MAAM,EAAEC,GAAG,EAAQC,IAAI,EAAEC,KAAK,EAAEC,IAAI,QAAoB,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnG,MAAMC,cAAc,GAAGH,IAAI,CAAAI,EAAA,GAAEC,KAA0B,IAAG;EACtD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,YAAY,GAAGA,CAAA,KAAI,CAAC,CAAC;EAE3B,oBACIJ,OAAA,CAACJ,IAAI;IAACS,SAAS,EAAC,gBAAgB;IAAA,GAAKF,KAAK;IAAEG,IAAI,EAAE,EAAG;IAACC,OAAO,EAAE,EAAG;IAACC,KAAK,EAAC,KAAK;IAACC,MAAM,EAAC,KAAK;IAACC,MAAM,EAAC,WAAW;IAAAC,QAAA,gBAC1GX,OAAA,CAACH,KAAK;MAACe,OAAO;MAACP,SAAS,EAAC,YAAY;MAACQ,QAAQ;MAACC,KAAK,EAAC,KAAK;MAACC,GAAG,EAAC,MAAM;MAACC,GAAG;MAAAL,QAAA,EAAER,KAAK,CAACc,MAAM,CAACC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAErGtB,OAAA,CAACL,GAAG;MAAC4B,KAAK;MAAClB,SAAS,EAAC,UAAU;MAAAM,QAAA,eAC3BX,OAAA,CAACN,MAAM;QAAC8B,OAAO,EAAEpB,YAAa;QAACU,KAAK,EAAC,KAAK;QAACC,GAAG,EAAC,MAAM;QAACH,OAAO,EAAC;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf,CAAC,CAAC;AAAAG,GAAA,GAtBIxB,cAAc;AA2BpB,eAAeA,cAAc;AAAC,IAAAC,EAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}